diff --git a/openmp/runtime/test/lit.cfg b/openmp/runtime/test/lit.cfg
index 14c7468982137..2a9ae05f97552 100644
--- a/openmp/runtime/test/lit.cfg
+++ b/openmp/runtime/test/lit.cfg
@@ -137,6 +137,9 @@ if config.operating_system in ['Windows', 'Linux', 'FreeBSD', 'NetBSD', 'DragonF
 if config.operating_system in ['Linux']:
     config.available_features.add('hidden-helper')
 
+if config.compiler_frontend_variant == 'MSVC' or config.compiler_simulate_id == 'MSVC':
+    config.available_features.add("msvc")
+
 target_arch = getattr(config, 'target_arch', None)
 if target_arch:
   config.available_features.add(target_arch + '-target-arch')
diff --git a/openmp/runtime/test/lit.site.cfg.in b/openmp/runtime/test/lit.site.cfg.in
index d6c259280619b..d0e54eac0dc3a 100644
--- a/openmp/runtime/test/lit.site.cfg.in
+++ b/openmp/runtime/test/lit.site.cfg.in
@@ -21,6 +21,8 @@ config.has_libatomic = @LIBOMP_HAVE_LIBATOMIC@
 config.is_standalone_build = @OPENMP_STANDALONE_BUILD@
 config.has_omit_frame_pointer_flag = @OPENMP_TEST_COMPILER_HAS_OMIT_FRAME_POINTER_FLAGS@
 config.target_arch = "@LIBOMP_ARCH@"
+config.compiler_frontend_variant = "@CMAKE_C_COMPILER_FRONTEND_VARIANT@"
+config.compiler_simulate_id = "@CMAKE_C_SIMULATE_ID@"
 
 # Let the main config do the real work.
 lit_config.load_config(config, "@LIBOMP_BASE_DIR@/test/lit.cfg")
diff --git a/openmp/runtime/test/transform/interchange/iterfor.cpp b/openmp/runtime/test/transform/interchange/iterfor.cpp
index 51219a07402e3..98a398fe8925e 100644
--- a/openmp/runtime/test/transform/interchange/iterfor.cpp
+++ b/openmp/runtime/test/transform/interchange/iterfor.cpp
@@ -1,3 +1,5 @@
+// XFAIL: msvc
+// Fails on windows due to issue #129023
 // RUN: %libomp-cxx20-compile-and-run | FileCheck %s --match-full-lines
 
 #ifndef HEADER
diff --git a/openmp/runtime/test/transform/tile/iterfor.cpp b/openmp/runtime/test/transform/tile/iterfor.cpp
index 12613544f6e5b..05b5677bf9c4f 100644
--- a/openmp/runtime/test/transform/tile/iterfor.cpp
+++ b/openmp/runtime/test/transform/tile/iterfor.cpp
@@ -1,3 +1,5 @@
+// XFAIL: msvc
+// Fails on windows due to issue #129023
 // RUN: %libomp-cxx20-compile-and-run | FileCheck %s --match-full-lines
 
 #ifndef HEADER
diff --git a/openmp/runtime/test/worksharing/for/omp_for_collapse_LowerTriangularLess.c b/openmp/runtime/test/worksharing/for/omp_for_collapse_LowerTriangularLess.c
index 9d742066cf1fc..c11e9ec43f4c0 100644
--- a/openmp/runtime/test/worksharing/for/omp_for_collapse_LowerTriangularLess.c
+++ b/openmp/runtime/test/worksharing/for/omp_for_collapse_LowerTriangularLess.c
@@ -1,3 +1,5 @@
+// XFAIL: msvc
+// Fails on windows due to issue #129023
 // RUN: %libomp-compile-and-run
 #include <stdio.h>
 #include <stdlib.h>
diff --git a/openmp/runtime/test/worksharing/for/omp_for_collapse_LowerTriangularLessEqual.c b/openmp/runtime/test/worksharing/for/omp_for_collapse_LowerTriangularLessEqual.c
index 154ee0f69daa5..3249594664489 100644
--- a/openmp/runtime/test/worksharing/for/omp_for_collapse_LowerTriangularLessEqual.c
+++ b/openmp/runtime/test/worksharing/for/omp_for_collapse_LowerTriangularLessEqual.c
@@ -1,3 +1,5 @@
+// XFAIL: msvc
+// Fails on windows due to issue #129023
 // RUN: %libomp-compile-and-run
 #include <stdio.h>
 #include <stdlib.h>
diff --git a/openmp/runtime/test/worksharing/for/omp_for_collapse_UpperTriangular.c b/openmp/runtime/test/worksharing/for/omp_for_collapse_UpperTriangular.c
index 452410025be0c..cc10ddb0e9104 100644
--- a/openmp/runtime/test/worksharing/for/omp_for_collapse_UpperTriangular.c
+++ b/openmp/runtime/test/worksharing/for/omp_for_collapse_UpperTriangular.c
@@ -1,3 +1,5 @@
+// XFAIL: msvc
+// Fails on windows due to issue #129023
 // RUN: %libomp-compile-and-run
 #include <stdio.h>
 #include <stdlib.h>
