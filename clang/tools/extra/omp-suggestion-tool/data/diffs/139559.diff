diff --git a/flang/lib/Semantics/check-omp-structure.cpp b/flang/lib/Semantics/check-omp-structure.cpp
index 8f6a623508aa7..78736ee1929d1 100644
--- a/flang/lib/Semantics/check-omp-structure.cpp
+++ b/flang/lib/Semantics/check-omp-structure.cpp
@@ -3545,8 +3545,7 @@ void OmpStructureChecker::CheckReductionObjects(
   // names into the lists of their members.
   for (const parser::OmpObject &object : objects.v) {
     auto *symbol{GetObjectSymbol(object)};
-    assert(symbol && "Expecting a symbol for object");
-    if (IsCommonBlock(*symbol)) {
+    if (symbol && IsCommonBlock(*symbol)) {
       auto source{GetObjectSource(object)};
       context_.Say(source ? *source : GetContext().clauseSource,
           "Common block names are not allowed in %s clause"_err_en_US,
diff --git a/flang/test/Semantics/OpenMP/reduction-undefined.f90 b/flang/test/Semantics/OpenMP/reduction-undefined.f90
new file mode 100644
index 0000000000000..bf1f03a878630
--- /dev/null
+++ b/flang/test/Semantics/OpenMP/reduction-undefined.f90
@@ -0,0 +1,18 @@
+! RUN: %python %S/../test_errors.py %s %flang_fc1 -fopenmp
+
+subroutine dont_crash(values)
+  implicit none
+  integer, parameter :: n = 100
+  real :: values(n)
+  integer :: i
+  !ERROR: No explicit type declared for 'sum'
+  sum = 0
+  !ERROR: No explicit type declared for 'sum'
+  !$omp parallel do reduction(+:sum)
+  do i = 1, n
+  !ERROR: No explicit type declared for 'sum'
+  !ERROR: No explicit type declared for 'sum'
+     sum = sum + values(i)
+  end do
+end subroutine dont_crash
+
