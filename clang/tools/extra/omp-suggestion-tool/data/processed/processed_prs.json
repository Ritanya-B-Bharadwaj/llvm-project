[
    {
        "number": 137517,
        "processed_text": "flangopenaccopenmp separ implement atom construct implement atom construct chang near futur accommod patch separ share implement avoid interf openacc",
        "files": [
            {
                "path": "flang/include/flang/Lower/DirectivesCommon.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/OpenACC.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMP.td",
                "role": "other"
            }
        ]
    },
    {
        "number": 137521,
        "processed_text": "flangopenmp allow updat claus argument updat claus specifi atom depobj direct current atom direct handl definit updat claus support use depobj direct take dependencetyp argument updat claus atom direct may argument sinc implement atom construct modifi use standard handl claus definit updat reflect",
        "files": [
            {
                "path": "flang/include/flang/Parser/parse-tree.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/OpenMP/Clauses.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/openmp-parsers.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMP.td",
                "role": "other"
            }
        ]
    },
    {
        "number": 137841,
        "processed_text": "mliropenmp cancel point taskgroup llvmir cancel cancel point taskgroup alway nest insid task insid taskgroup task cancel task need clean own taskgroup therefor cancel branch handler done convers task convers taskgroup ad firstpriv claus test cancel taskgroup demonstr block branch block mandatori cleanup code ad cancel point follow exactli code path",
        "files": [
            {
                "path": "mlir/lib/Target/LLVMIR/Dialect/OpenMP/OpenMPToLLVMIRTranslation.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 138159,
        "processed_text": "flangopenmp predetermin privat insid section produc code equival explicit privat claus section construct problem section construct got dsp tri privat symbol section privat section happen outer section construct outer construct dsp share fix",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138163,
        "processed_text": "flangopenmp add implicit cast ompatomiccaptur patch add support emit implicit cast atom captur constitu oper differ yet compat type fix httpsgithubcomllvmllvmprojectissu httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138179,
        "processed_text": "remov alternativenam claus direct class alternativenam introduc year ago moment one use one origin chang introduc spec introduc differ spell direct alternativenam adequ mechan implement reason remov alternativenam member claus direct directivebasetd sinc alternativenam text appear number test implement semaopenmpcpp preserv text diagnost",
        "files": [
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "llvm/include/llvm/Frontend/Directive/DirectiveBase.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMP.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/TableGen/DirectiveEmitter.h",
                "role": "other"
            },
            {
                "path": "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 138210,
        "processed_text": "flangopenmp gener correct present check implicit map option allocat current gener appropri check check option allocat argument present access relev compon particular creat bound must gener presenc check must make sure generatekeep load extern presenc check utilis raw address rather regular address info data structur similarli case option allocat must treat like nonallocat argument gener intermedi alloc locat memori access later lower without caus segfault perform map even end result empti allocat basic shouldnt explod someon tri map nonpres option similar map null data",
        "files": [
            {
                "path": "flang/include/flang/Optimizer/Builder/DirectivesCommon.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Optimizer/OpenMP/MapInfoFinalization.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138397,
        "processed_text": "flangopenmp firconvert ompatomicupd region region gener ompatomicupd current emit direct crash rh express involv complex type lh variabl primit type say sinc emit illeg add condit check emit addit case rh express complex type fix httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138489,
        "processed_text": "flangopenmp updat map pass use updat map pass use newli ad op recent ad upstream instead handl nest op parent httpsgithubcomllvmllvmprojectpul",
        "files": [
            {
                "path": "flang/lib/Optimizer/OpenMP/DoConcurrentConversion.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138499,
        "processed_text": "kmposaix handl build linuxsparc get highli confus sinc defin header suppos includ howev actual case two reason alway defin either haiku otherwis even wors defin aix undefin otherwis macro suppos alway defin appropri check aix violat caus problem target probabl get indirectli otherwis linuxsparc patch fix also defin ose chang check necessari test",
        "files": [
            {
                "path": "openmp/runtime/src/kmp.h",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/src/kmp_affinity.cpp",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/src/kmp_platform.h",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/src/kmp_wrapper_getpid.h",
                "role": "runtime"
            }
        ]
    },
    {
        "number": 138505,
        "processed_text": "flangfir add local specifi add new model local specifi clone particular new also model privatizationloc logic ssa valu dialect like stack httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul",
        "files": [
            {
                "path": "flang/include/flang/Optimizer/Dialect/FIRAttr.td",
                "role": "other"
            },
            {
                "path": "flang/include/flang/Optimizer/Dialect/FIROps.td",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/Bridge.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Optimizer/Builder/FIRBuilder.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Optimizer/Dialect/FIROps.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138506,
        "processed_text": "flangfir add local specifi model extend op model local specifi follow pattern use type referenc local specifi add mlir chang well print pars logic stack httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul",
        "files": [
            {
                "path": "flang/include/flang/Optimizer/Dialect/FIROps.td",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/Bridge.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Optimizer/Dialect/FIROps.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138508,
        "processed_text": "use tl gtid solari run testsuit solarisamd mani test like build also get investig show set massiv reduc number failur test",
        "files": [
            {
                "path": "openmp/runtime/src/kmp_global.cpp",
                "role": "runtime"
            }
        ]
    },
    {
        "number": 138510,
        "processed_text": "use pthreadself kmpgettid solari build solarisamd get there reason solari use aix test",
        "files": [
            {
                "path": "openmp/runtime/src/kmp_wrapper_getpid.h",
                "role": "runtime"
            }
        ]
    },
    {
        "number": 138514,
        "processed_text": "openmptest make prefix option test solarisamd show larg number failur due issu testsuit expect pointer print prefix use format solari print hex without prefix howev differ complet benign iso state saw two way around replac everi instanc macro defin xamdpcsolarisxpclinuxgnu",
        "files": [
            {
                "path": "openmp/runtime/test/ompt/cancel/cancel_parallel.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/cancel/cancel_taskgroup.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/cancel/cancel_worksharing.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/misc/api_calls_misc.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/misc/control_tool.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/misc/interoperability.cpp",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/misc/runtime_error.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/dynamic_enough_threads.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/dynamic_not_enough_threads.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/max_active_levels_serialized.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/nested.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/nested_lwt.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/nested_serialized.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/nested_serialized_task_frames.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/nested_thread_num.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/no_thread_num_clause.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/normal.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/not_enough_threads.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/parallel_if0.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/region_in_expl_task_task_frames.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/repeated_calls.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/parallel/serialized.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/synchronization/barrier/explicit.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/synchronization/barrier/for_loop.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/synchronization/barrier/for_simd.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/synchronization/barrier/implicit_task_data.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/synchronization/barrier/parallel_region.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/synchronization/barrier/sections.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/synchronization/barrier/single.c",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/test/ompt/synchronization/critical.c",
                "role": "runtime"
            }
        ]
    },
    {
        "number": 138515,
        "processed_text": "openmptest adjust toolavailablesearchc solari testsuit failur remain solarisamd one issu expect messag emit linuxglibc solari messag differ linuxx get solarisamd emit sinc exact word obvious implement detail patch allow form test",
        "files": [
            {
                "path": "openmp/runtime/test/ompt/loadtool/tool_available_search/tool_available_search.c",
                "role": "runtime"
            }
        ]
    },
    {
        "number": 138520,
        "processed_text": "builtinreturnaddress call sparc use two place howev target call need wrap get actual return address sparc among target one actual implement clangsparc builtinextractreturnaddr etchttpsreviewsllvmorgd need adjust sanitizercommontest enabl test sparchttpsreviewsllvmorgd target noop howev target issu unlik correctli implement might issu build patch add necessari call test",
        "files": [
            {
                "path": "openmp/runtime/src/ompt-internal.h",
                "role": "runtime"
            },
            {
                "path": "openmp/runtime/src/ompt-specific.h",
                "role": "runtime"
            }
        ]
    },
    {
        "number": 138523,
        "processed_text": "openmptest defin printpossiblereturnaddress sparc part testsuit current dont build sparc due lack definit patch provid one vast major test solarissparcv addit patch linuxsparc current definit obtain empir test",
        "files": [
            {
                "path": "openmp/runtime/test/ompt/callback.h",
                "role": "runtime"
            }
        ]
    },
    {
        "number": 138525,
        "processed_text": "provid nrschedgsetaffin linuxsparc doesnt current build linuxsparc due lack definit patch provid test",
        "files": [
            {
                "path": "openmp/runtime/src/kmp_affinity.h",
                "role": "runtime"
            }
        ]
    },
    {
        "number": 138534,
        "processed_text": "flangfir basic pft mlir lower concurr local specifi extend support local specifi pft mlir level add codegen gener newli ad op referenc op op local specifi attach reus compon gener bit allow handl op op well stack httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul",
        "files": [
            {
                "path": "flang/include/flang/Lower/AbstractConverter.h",
                "role": "other"
            },
            {
                "path": "flang/include/flang/Optimizer/Dialect/FIROps.h",
                "role": "other"
            },
            {
                "path": "flang/include/flang/Optimizer/Dialect/FIROps.td",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/Bridge.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.h",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138547,
        "processed_text": "clangdriv enabl intern target offload thinlto amdgpu none",
        "files": [
            {
                "path": "clang/lib/Driver/ToolChains/Clang.cpp",
                "role": "clang-other"
            },
            {
                "path": "clang/test/Driver/openmp-offload-gpu.c",
                "role": "test"
            }
        ]
    },
    {
        "number": 138582,
        "processed_text": "openmpnfc use temporari instead local take advantag move semant static analysi flag could move replac local direct call function argument locat",
        "files": [
            {
                "path": "llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 138589,
        "processed_text": "add pre load hack back summari differ order mode arent support atom load add zero thing less effici work fix httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "offload/DeviceRTL/include/Synchronization.h",
                "role": "other"
            }
        ]
    },
    {
        "number": 138592,
        "processed_text": "clangopenmp add error larg expr collaps claus report error collaps claus express cant repres bit issu",
        "files": [
            {
                "path": "clang/include/clang/Basic/DiagnosticSemaKinds.td",
                "role": "sema"
            },
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "clang/test/OpenMP/for_collapse_messages.cpp",
                "role": "test"
            },
            {
                "path": "clang/test/OpenMP/for_ordered_clause.cpp",
                "role": "test"
            },
            {
                "path": "clang/test/OpenMP/for_simd_collapse_messages.cpp",
                "role": "test"
            },
            {
                "path": "clang/test/OpenMP/for_simd_loop_messages.cpp",
                "role": "test"
            },
            {
                "path": "clang/test/OpenMP/masked_taskloop_collapse_messages.cpp",
                "role": "test"
            },
            {
                "path": "clang/test/OpenMP/masked_taskloop_simd_collapse_messages.cpp",
                "role": "test"
            },
            {
                "path": "clang/test/OpenMP/simd_collapse_messages.cpp",
                "role": "test"
            }
        ]
    },
    {
        "number": 138604,
        "processed_text": "amdgpu move inferaddressspacespass middl end optim pipelin run twice nonlto pipelin higher detail detail lto post link pipelin run higher sinc inlin sroa dont run detail detail",
        "files": [
            {
                "path": "llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 138626,
        "processed_text": "releasex add pre load hack back backport dfcbcb request yeluo",
        "files": [
            {
                "path": "offload/DeviceRTL/include/Synchronization.h",
                "role": "other"
            }
        ]
    },
    {
        "number": 138634,
        "processed_text": "mliropenmp allow cancel taskgroup insid taskloop region previous permit within regionthi chang allow insid region well",
        "files": [
            {
                "path": "mlir/lib/Dialect/OpenMP/IR/OpenMPDialect.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 138646,
        "processed_text": "flangopenmp support lower taskloop construct mlir ad support lower taskloop construct clausespriv firstpriv mlir patch depend httpsgithubcomllvmllvmprojectpul",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            },
            {
                "path": "mlir/lib/Dialect/OpenMP/IR/OpenMPDialect.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 138672,
        "processed_text": "flangopenmp share global variabl initi code fix new testcas flang miss length paramet requir variabl length string box global variabl code initi global variabl support type length paramet instead duplic initi logic decid use exact initi use base languag alreadi well test updat new type differ global variabl zero initi instead left undefin previous use share smaller amount logic base languag lower think bug demonstr helper low level help use made static insid convertvariablecpp",
        "files": [
            {
                "path": "flang/include/flang/Lower/ConvertVariable.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/ConvertVariable.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138816,
        "processed_text": "flang generl name delay privat cli flag remov prefix delay privatizationloc flag sinc use well stack httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul",
        "files": [
            {
                "path": "flang/include/flang/Support/Flags.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/Bridge.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/Utils.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/Utils.h",
                "role": "flang"
            },
            {
                "path": "flang/lib/Support/Flags.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138956,
        "processed_text": "flang refin line mode address fail fujitsu test suit case broken patch defer handl line fopenmp normal compil actual compil rather process immedi mode test sampl bug report well fujitsu test could find use line fix httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "flang/include/flang/Parser/token-sequence.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Parser/parsing.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/prescan.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/prescan.h",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/token-sequence.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 138967,
        "processed_text": "llvmopenmp add older version llvmompgetopenmpvers add version make flang default version includ list",
        "files": [
            {
                "path": "llvm/lib/Frontend/OpenMP/OMP.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139064,
        "processed_text": "openmpompirbuild collect user valu replac target outlin function fix crash curent happen given follow input crash happen follow sequenc event taken outlin function target region creat first outlin function still refer ssa valu origin function target region builder iter user ssa valu use target region replac correspond function argument outlin function instruct refer ssa valu say use ssa valu replac instruct delet use valu next iter still iter instruct drop last actual user valu henc collect user first modifi",
        "files": [
            {
                "path": "llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139114,
        "processed_text": "llvmopenmp add version paramet getopenmpdirectivenam direct differ spell differ version spec use proper spell given spec version pass version paramet getopenmpdirectivenam paramet wont use moment default valu allow caller pass gradual adopt variou compon rfc httpsdiscoursellvmorgtrfcalternativespellingsofopenmpdirect",
        "files": [
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMP.h",
                "role": "other"
            },
            {
                "path": "llvm/unittests/Frontend/OpenMPDecompositionTest.cpp",
                "role": "other"
            },
            {
                "path": "llvm/unittests/Frontend/OpenMPParsingTest.cpp",
                "role": "other"
            },
            {
                "path": "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139115,
        "processed_text": "clangopenmp pass version getopenmpdirectivenam version store languag option astcontext context avail use fallback version rfc httpsdiscoursellvmorgtrfcalternativespellingsofopenmpdirect",
        "files": [
            {
                "path": "clang/include/clang/AST/OpenMPClause.h",
                "role": "ast"
            },
            {
                "path": "clang/lib/AST/DeclPrinter.cpp",
                "role": "ast"
            },
            {
                "path": "clang/lib/AST/OpenMPClause.cpp",
                "role": "ast"
            },
            {
                "path": "clang/lib/AST/StmtPrinter.cpp",
                "role": "ast"
            },
            {
                "path": "clang/lib/Basic/OpenMPKinds.cpp",
                "role": "basic"
            },
            {
                "path": "clang/lib/Parse/ParseOpenMP.cpp",
                "role": "parse"
            },
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "clang/lib/Sema/TreeTransform.h",
                "role": "sema"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMP.h",
                "role": "other"
            },
            {
                "path": "llvm/unittests/Frontend/OpenMPDecompositionTest.cpp",
                "role": "other"
            },
            {
                "path": "llvm/unittests/Frontend/OpenMPParsingTest.cpp",
                "role": "other"
            },
            {
                "path": "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139118,
        "processed_text": "long crash invalid size argument tri get type inform express node contain error caus type express depend code expect handl error condit earli return fix",
        "files": [
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "clang/test/OpenMP/tile_messages.cpp",
                "role": "test"
            }
        ]
    },
    {
        "number": 139131,
        "processed_text": "flangopenmp pass version getopenmpdirectivenam version store langopt semanticscontext use fallback version semanticscontext unavail mostli case debug dump rfc httpsdiscoursellvmorgtrfcalternativespellingsofopenmpdirect",
        "files": [
            {
                "path": "clang/include/clang/AST/OpenMPClause.h",
                "role": "ast"
            },
            {
                "path": "clang/lib/AST/DeclPrinter.cpp",
                "role": "ast"
            },
            {
                "path": "clang/lib/AST/OpenMPClause.cpp",
                "role": "ast"
            },
            {
                "path": "clang/lib/AST/StmtPrinter.cpp",
                "role": "ast"
            },
            {
                "path": "clang/lib/Basic/OpenMPKinds.cpp",
                "role": "basic"
            },
            {
                "path": "clang/lib/Parse/ParseOpenMP.cpp",
                "role": "parse"
            },
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "clang/lib/Sema/TreeTransform.h",
                "role": "sema"
            },
            {
                "path": "flang/examples/FlangOmpReport/FlangOmpReportVisitor.cpp",
                "role": "other"
            },
            {
                "path": "flang/include/flang/Parser/dump-parse-tree.h",
                "role": "other"
            },
            {
                "path": "flang/include/flang/Parser/unparse.h",
                "role": "other"
            },
            {
                "path": "flang/include/flang/Semantics/unparse-with-symbols.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Frontend/ParserActions.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/ClauseProcessor.h",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/Decomposer.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/openmp-parsers.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/parse-tree.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/unparse.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/mod-file.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/resolve-directives.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/unparse-with-symbols.cpp",
                "role": "flang"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMP.h",
                "role": "other"
            },
            {
                "path": "llvm/unittests/Frontend/OpenMPDecompositionTest.cpp",
                "role": "other"
            },
            {
                "path": "llvm/unittests/Frontend/OpenMPParsingTest.cpp",
                "role": "other"
            },
            {
                "path": "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139147,
        "processed_text": "offload load imag descriptor devic summari right gener assum one imag per devic binari descriptor repres singl compil mean imag go contain code built differ architectur use interfac problemat case code load multipl time like wiht gener gfx isa patch quick dirti slution prevent happen mean use first one find might overli optim better altern note affect share librari load per binari descriptor per devic",
        "files": [
            {
                "path": "offload/libomptarget/PluginManager.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139277,
        "processed_text": "crash diagnos distschedul fail pass requir argument emit diagnost sourc rang use place index caus fail assert due incorrect index fix",
        "files": [
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "clang/test/OpenMP/teams_distribute_dist_schedule_messages.cpp",
                "role": "test"
            }
        ]
    },
    {
        "number": 139280,
        "processed_text": "crash invalid unrol partial get integ constant express valu express contain error fix httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "clang/test/OpenMP/unroll_messages.cpp",
                "role": "test"
            }
        ]
    },
    {
        "number": 139287,
        "processed_text": "implement set control elis begin declar variant devic implement set trigger elis token match static beginend declar variant simpli extend logic devic set includ implement set report kkwli",
        "files": [
            {
                "path": "clang/lib/Parse/ParseOpenMP.cpp",
                "role": "parse"
            },
            {
                "path": "clang/test/AST/ast-dump-openmp-begin-declare-variant_6.c",
                "role": "ast"
            },
            {
                "path": "clang/test/AST/ast-dump-openmp-begin-declare-variant_7.c",
                "role": "ast"
            },
            {
                "path": "clang/test/OpenMP/begin_declare_variant_elided_range_implementation.c",
                "role": "test"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMPContext.h",
                "role": "other"
            },
            {
                "path": "llvm/lib/Frontend/OpenMP/OMPContext.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139313,
        "processed_text": "crash invalid argument simd collaps recent crash fix check whether argument express contain error fix",
        "files": [
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "clang/test/OpenMP/simd_collapse_messages.cpp",
                "role": "test"
            }
        ]
    },
    {
        "number": 139344,
        "processed_text": "allow beginend declar variant execut context miss decler direct parser execut decler direct caus error insid function add support beginend declar variant reus logic use global scope",
        "files": [
            {
                "path": "clang/include/clang/Parse/Parser.h",
                "role": "parse"
            },
            {
                "path": "clang/lib/Parse/ParseOpenMP.cpp",
                "role": "parse"
            },
            {
                "path": "clang/test/OpenMP/begin_declare_variant_executable_scope.c",
                "role": "test"
            },
            {
                "path": "clang/test/OpenMP/begin_declare_variant_messages.c",
                "role": "test"
            }
        ]
    },
    {
        "number": 139364,
        "processed_text": "openmptest properli check null testsuit failur remain solarisamd due issu test question assum pointer print rest testsuit use patch chang follow suit test",
        "files": [
            {
                "path": "openmp/tools/multiplex/tests/custom_data_storage/custom_data_storage.c",
                "role": "other"
            },
            {
                "path": "openmp/tools/multiplex/tests/print/print.c",
                "role": "other"
            }
        ]
    },
    {
        "number": 139385,
        "processed_text": "flangopenmp support mlir lower linear claus ompwsloop patch add support mlir lower linear claus ompwsloop except linear modifi",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/ClauseProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/ClauseProcessor.h",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h",
                "role": "other"
            },
            {
                "path": "llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp",
                "role": "other"
            },
            {
                "path": "mlir/lib/Target/LLVMIR/Dialect/OpenMP/OpenMPToLLVMIRTranslation.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139522,
        "processed_text": "flangopenmpsemant resolv object flush arg list fix normal flush argument list would contain dataref variabl dataref handl gener resolvenam problem wasnt observ common block name specifi pars dataref alreadi handl resolvedirect ompobjectlist argument list ive ad visitor flush ensur argument resolv test make sure compil doesnt crash encount unresolv symbol show current deni flush common block sure right restrict common block flush argument list fix come differ patch one fix ice",
        "files": [
            {
                "path": "flang/lib/Semantics/resolve-directives.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 139528,
        "processed_text": "flangopenmp allow flush common block think deni accid httpsgithubcomllvmllvmprojectcommitddfdbdfcebaeacebc flush common block allow standard read allow classicflang support gfortran ifx doesnt need lower chang translat ignor flush argument list runtim librari doesnt support flush specif data depend upon httpsgithubcomllvmllvmprojectpul ignor first commit",
        "files": [
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 139559,
        "processed_text": "flangopenmpreplac assert ifcondit symbol declar checkompstructur hit assert safe treat undeclar symbol block would declar block ad simpl test confirm give error messag crash issu alreadi check symbol null code identifi ticket",
        "files": [
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 139577,
        "processed_text": "crash invalid cancel direct next token cancel special token would trigger assert consum token elsewher function note could check unknown direct differ error recoveri caus mani behavior chang test form unexpect token ignor diagnost didnt seem like improv test case fix",
        "files": [
            {
                "path": "clang/lib/Parse/ParseOpenMP.cpp",
                "role": "parse"
            },
            {
                "path": "clang/test/OpenMP/cancel_messages.cpp",
                "role": "test"
            }
        ]
    },
    {
        "number": 139592,
        "processed_text": "openmpnfc use pass const ref depend static analysi flag pass depend emittargetcal place could use stdmove avoid copi closer look indic could instead turn paramet const default valu sinc use two line test chang two locat easi",
        "files": [
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h",
                "role": "other"
            },
            {
                "path": "llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp",
                "role": "other"
            },
            {
                "path": "llvm/unittests/Frontend/OpenMPIRBuilderTest.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139743,
        "processed_text": "flangopenmp verifi use ompcancellationconstructtypeclaus direct name use claus exampl cancel case direct name misplac could interpret claus verifi use valid emit diagnost messag fix httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "flang/lib/Parser/openmp-parsers.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 139745,
        "processed_text": "crash invalid size express werent correctli handl size express error tri get type size express releas note need support stripe ad current releas fix",
        "files": [
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "clang/test/OpenMP/stripe_messages.cpp",
                "role": "test"
            }
        ]
    },
    {
        "number": 139793,
        "processed_text": "clangopenmp treat workshar unknown direct workshar construct present fortran common code treat direct need reject grace encount intern assert fix httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "clang/lib/Parse/ParseOpenMP.cpp",
                "role": "parse"
            },
            {
                "path": "clang/test/OpenMP/openmp_workshare.c",
                "role": "test"
            }
        ]
    },
    {
        "number": 139838,
        "processed_text": "nfcclang simplifi gettrailingobject openaccopenmp claus simplifi usag openaccopenmp claus use either nontempl form singl trail type use singl argument form return arrayrefmutablearrayref",
        "files": [
            {
                "path": "clang/include/clang/AST/OpenACCClause.h",
                "role": "ast"
            },
            {
                "path": "clang/include/clang/AST/OpenMPClause.h",
                "role": "ast"
            },
            {
                "path": "clang/lib/AST/OpenACCClause.cpp",
                "role": "ast"
            }
        ]
    },
    {
        "number": 139901,
        "processed_text": "tent pars crash metadirect two crash root caus correctli handl unexpect token one case fail return earli caus pars paren regular token instead special token caus assert case fail commit revert tent pars action get paren one expect fix",
        "files": [
            {
                "path": "clang/lib/Parse/ParseOpenMP.cpp",
                "role": "parse"
            },
            {
                "path": "clang/test/OpenMP/metadirective_messages.cpp",
                "role": "test"
            }
        ]
    },
    {
        "number": 139960,
        "processed_text": "llvmopenmp add sourcelanguag properti direct offici languag recogn fortran direct languagespecif cconli fortranonli add properti tablegen definit direct list languag allow direct tablegen backend gener bitmasklik enumer sourcelanguag function sourcelanguag getdirectivelanguagesdirect",
        "files": [
            {
                "path": "llvm/include/llvm/Frontend/Directive/DirectiveBase.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMP.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/TableGen/DirectiveEmitter.h",
                "role": "other"
            },
            {
                "path": "llvm/test/TableGen/directive1.td",
                "role": "other"
            },
            {
                "path": "llvm/test/TableGen/directive2.td",
                "role": "other"
            },
            {
                "path": "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 139961,
        "processed_text": "clangopenmp improv handl noncc direct ad handl fortranonli workshar direct howev direct alloc use gendirectivelanguag function detect noncc direct instead enumer",
        "files": [
            {
                "path": "clang/lib/Parse/ParseOpenMP.cpp",
                "role": "parse"
            },
            {
                "path": "clang/test/OpenMP/openmp_non_c_directives.c",
                "role": "test"
            },
            {
                "path": "clang/test/OpenMP/openmp_workshare.c",
                "role": "test"
            },
            {
                "path": "llvm/include/llvm/ADT/BitmaskEnum.h",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/Frontend/Directive/DirectiveBase.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMP.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/TableGen/DirectiveEmitter.h",
                "role": "other"
            },
            {
                "path": "llvm/test/TableGen/directive1.td",
                "role": "other"
            },
            {
                "path": "llvm/test/TableGen/directive2.td",
                "role": "other"
            },
            {
                "path": "llvm/unittests/ADT/BitmaskEnumTest.cpp",
                "role": "other"
            },
            {
                "path": "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 140066,
        "processed_text": "flangopenmpadd userreductiondetail use declar reduct add anoth puzzl piec support declar reduct function add support oper deriv type well declar multipl differ type name oper new detail class userreductiondeti introduc hold list type support given reduct declar test pars symbol gener ad declar reduct still support lower gener yet implement fatal error fix fix fix fix",
        "files": [
            {
                "path": "flang/include/flang/Semantics/symbol.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Parser/unparse.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/assignment.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/assignment.h",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/mod-file.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/mod-file.h",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/resolve-names-utils.h",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/resolve-names.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/symbol.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 140089,
        "processed_text": "mliropenmp add attribut privat barrier barrier need end initializationcopi privat variabl variabl lastpriv ensur firstpriv variabl receiv origin valu variabl lastpriv claus overwrit previous barrier ad flang fontend reliabl way put barrier correct place delay privat dialect could day user import safe way use construct avail dialect lastpriv current model dialect way reliabl determin whether lastpriv variabl therefor frontend provid inform new attribut part seri patch httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "mlir/include/mlir/Dialect/OpenMP/OpenMPClauses.td",
                "role": "other"
            },
            {
                "path": "mlir/include/mlir/Dialect/OpenMP/OpenMPOps.td",
                "role": "other"
            },
            {
                "path": "mlir/lib/Conversion/SCFToOpenMP/SCFToOpenMP.cpp",
                "role": "other"
            },
            {
                "path": "mlir/lib/Dialect/OpenMP/IR/OpenMPDialect.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 140090,
        "processed_text": "mliropenmp add translat privatebarri attr llvmir part seri httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "mlir/include/mlir/Dialect/OpenMP/OpenMPClauses.td",
                "role": "other"
            },
            {
                "path": "mlir/include/mlir/Dialect/OpenMP/OpenMPOps.td",
                "role": "other"
            },
            {
                "path": "mlir/lib/Conversion/SCFToOpenMP/SCFToOpenMP.cpp",
                "role": "other"
            },
            {
                "path": "mlir/lib/Dialect/OpenMP/IR/OpenMPDialect.cpp",
                "role": "other"
            },
            {
                "path": "mlir/lib/Target/LLVMIR/Dialect/OpenMP/OpenMPToLLVMIRTranslation.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 140092,
        "processed_text": "flangopenmp use attribut delay privat barrier fix barrier need copi firstpriv variabl initi call construct wsloop way express mlir delay privat implicit ad mlirllvmir convers previou approach put barrier immedi wsloop similar delay privat firstpriv copi code would insert open possibl race observ bug report patch solv issu instead set attribut mlir oper instruct dialect convers insert barrier correct place",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.h",
                "role": "flang"
            },
            {
                "path": "mlir/include/mlir/Dialect/OpenMP/OpenMPClauses.td",
                "role": "other"
            },
            {
                "path": "mlir/include/mlir/Dialect/OpenMP/OpenMPOps.td",
                "role": "other"
            },
            {
                "path": "mlir/lib/Conversion/SCFToOpenMP/SCFToOpenMP.cpp",
                "role": "other"
            },
            {
                "path": "mlir/lib/Dialect/OpenMP/IR/OpenMPDialect.cpp",
                "role": "other"
            },
            {
                "path": "mlir/lib/Target/LLVMIR/Dialect/OpenMP/OpenMPToLLVMIRTranslation.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 140560,
        "processed_text": "openmpflang semant check scope declar mapper current semant check place incorrect patch fix default name mapper allow deriv type current semant check allow default name mapper across deriv type also make sure declar mapper follow proper scope rule default name mapper coauthoredbi raghu maddhipatla raghumaddhipatlaamdcom",
        "files": [
            {
                "path": "flang/include/flang/Parser/parse-tree.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/OpenMP/ClauseProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/openmp-parsers.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/unparse.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/resolve-names.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 140710,
        "processed_text": "flangopenmp crash semat error atom captur claus crash caus invalid express atom captur claus due function account potenti return null httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "flang/include/flang/Semantics/tools.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/OpenACC.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 140786,
        "processed_text": "openmpgpufix enabl gener barrier singl thread context gener gpu barrier implement check main thread gener mode identifi singl thread region doesnt work sinc insid nonact sequenti parallel thread becom main thread team main thread gener mode least implement api today identifi singl thread region check team size explicitli expos three issu one expect bug second one bug fixm singlethreadedforbarrierhangc file final one also benign describ end nonbug issu come ever initi thread state afterward never run region parallel littl conserv guess thread state realli bad perform anyway bug come optim singlethreadedforbarrierhang execut genericspmd mode reason loos updat look much like compil bug could also anoth logic issu runtim need investig issu number come nest parallel insid target region spmdcheck logic get confus determin spmd fine pick unreason thread count benign think weird launch thread",
        "files": [
            {
                "path": "offload/DeviceRTL/src/Synchronization.cpp",
                "role": "other"
            },
            {
                "path": "offload/test/offloading/single_threaded_for_barrier_hang_1.c",
                "role": "other"
            },
            {
                "path": "offload/test/offloading/single_threaded_for_barrier_hang_2.c",
                "role": "other"
            }
        ]
    },
    {
        "number": 140798,
        "processed_text": "flangopenmp diagnost bad cancel type fix",
        "files": [
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 140948,
        "processed_text": "openmpflang oob access deriv type map patch fix unintent oob acess map member deriv type last member map break loop alreadi intend behaviour use instead result oob access fix follow test case",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/Utils.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 141142,
        "processed_text": "atom compar handl overload oper summari overload oper global namespac ast node modifi use handl case basic treat binari express two argument fix httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "clang/lib/Sema/SemaOpenMP.cpp",
                "role": "sema"
            },
            {
                "path": "clang/test/OpenMP/atomic_messages.cpp",
                "role": "test"
            }
        ]
    },
    {
        "number": 141250,
        "processed_text": "remap path runtim call appli debug prefix map locat string fix httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "clang/lib/CodeGen/CGOpenMPRuntime.cpp",
                "role": "codegen"
            },
            {
                "path": "clang/test/CodeGen/openmp-prefix-map.c",
                "role": "test"
            }
        ]
    },
    {
        "number": 141713,
        "processed_text": "flang handl map type reliabl onto offload target gpu oper use map underli data pointer wrap mlir valu oper need pointer underli data pointer given refer descriptor use obtain address underli data pointer extend provid function well stack httpsgithubcomllvmllvmprojectpul httpsgithubcomllvmllvmprojectpul",
        "files": [
            {
                "path": "flang/include/flang/Optimizer/Dialect/FIROps.td",
                "role": "other"
            },
            {
                "path": "flang/lib/Optimizer/CodeGen/CodeGen.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Optimizer/Dialect/FIROps.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Optimizer/Dialect/FIRType.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 141765,
        "processed_text": "utilstablegen implement claus alias altern spell use spell gener claus parser function yet updat definit claus direct take list spell instead singl string exampl spell version string default version background inform see httpsdiscoursellvmorgtrfcalternativespellingsofopenmpdirect",
        "files": [
            {
                "path": "llvm/include/llvm/Frontend/Directive/DirectiveBase.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenACC/ACC.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMP.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/TableGen/DirectiveEmitter.h",
                "role": "other"
            },
            {
                "path": "llvm/test/TableGen/directive1.td",
                "role": "other"
            },
            {
                "path": "llvm/test/TableGen/directive2.td",
                "role": "other"
            },
            {
                "path": "llvm/test/TableGen/directive3.td",
                "role": "other"
            },
            {
                "path": "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp",
                "role": "other"
            },
            {
                "path": "mlir/test/mlir-tblgen/directive-common.td",
                "role": "other"
            }
        ]
    },
    {
        "number": 141767,
        "processed_text": "flangfiropenmp refactor privtiz code share locat refactor util need creat privtizationlocat op fir dialect share locat isol stuff much possibl",
        "files": [
            {
                "path": "flang/include/flang/Lower/Support/Utils.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/Bridge.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.h",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/Support/Utils.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 141823,
        "processed_text": "flangopenmp verifi argument copypriv variabl check argument variabl list item miss lead crash lower invalid situat fix first testcas report httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/check-omp-structure.h",
                "role": "flang"
            }
        ]
    },
    {
        "number": 141844,
        "processed_text": "flangopenmp treat classtyp boxtyp copypriv fix second problem report httpsgithubcomllvmllvmprojectissu",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/ClauseProcessor.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 141855,
        "processed_text": "clangdriveropenmpspirv spirv devicertl expect file name option name specifi path exist error give invalid option name cant find file also expect file name weird expect file name use prefix suggest option user also tripl optionfilenam consist",
        "files": [
            {
                "path": "clang/lib/Driver/ToolChains/CommonArgs.cpp",
                "role": "clang-other"
            },
            {
                "path": "clang/test/Driver/spirv-openmp-toolchain.c",
                "role": "test"
            }
        ]
    },
    {
        "number": 141923,
        "processed_text": "flangopenmp allow structur compon claus even though spec version prohibit strcutur compon specifi claus restrict sensibl rectifi issu lift restrict allow structur compon claus allow",
        "files": [
            {
                "path": "flang/include/flang/Evaluate/tools.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/OpenMP/ClauseProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 141964,
        "processed_text": "nfcopenmp move default declar mapper name suffix ompconstantsh patch move default declar mapper name suffix ompdefaultmapp ompconstantsh file use everywher lower",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/ClauseProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/OpenMP.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Parser/openmp-parsers.cpp",
                "role": "flang"
            },
            {
                "path": "llvm/include/llvm/Frontend/OpenMP/OMPConstants.h",
                "role": "other"
            }
        ]
    },
    {
        "number": 142154,
        "processed_text": "flangopenmp explicitli set share dsa symbol chang ompshar alway set share symbol instead absenc privat flag interpret share dsa problem symbol flag host associ could also mean dsa enclos context share symbol behav privat treat way host associ symbol flag mention also incorrect simpli test flag given symbol find privat share function getsymboldsa ad would better avoid need special symbol would requir chang symbol collect lower besid semant check need know dsa claus use avoid confus implicit symbol dsa claus new flag ad ompexplicit set symbol explicitli determin datashar attribut chang addtocontextobjectwithdsa symbol dsa map could probabl remov dsa could obtain directli symbol attempt debug messag also ad debugtyp make easier debug creation implicit symbol visual associ given symbol fix fix",
        "files": [
            {
                "path": "flang/include/flang/Semantics/openmp-dsa.h",
                "role": "other"
            },
            {
                "path": "flang/include/flang/Semantics/symbol.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/Bridge.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/openmp-dsa.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/resolve-directives.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 142160,
        "processed_text": "flangopenmp resolv name declar simd uniform claus add visitor ompclauseuniform resolv paramet name fix issu",
        "files": [
            {
                "path": "flang/include/flang/Semantics/symbol.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Semantics/resolve-directives.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/resolve-names.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/symbol.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 142182,
        "processed_text": "flang propag volatil reduct var reduct claus lower reduct variabl refer type propag volatil origin variabl type add test address case reductionprocessor also look case bridg havent found yet",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/ReductionProcessor.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 142378,
        "processed_text": "flangopenmp deprec alloc direct part alloc direct deprec favour alloc construct fortran alloc statement follow alloc direct enabl flang warn ad inform user test ensur behaviour continu also includ see also",
        "files": [
            {
                "path": "flang/lib/Semantics/resolve-directives.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 142379,
        "processed_text": "dont use libproc solari current doesnt compil bit solari look closer there point use interfac result isnt use remaind code origin give indic deem necessaryus patch switch use match make minor format fix test",
        "files": [
            {
                "path": "openmp/runtime/src/z_Linux_util.cpp",
                "role": "runtime"
            }
        ]
    },
    {
        "number": 142415,
        "processed_text": "flangopenmp skip implicit type openmpdeclarativeconstruct declaresimdconstruct declar construct current implicitli declar variabl regardless whether sourc code contain implicit none caus semant analysi issu implicit type match declar type solv skip implicit type openmpdeclarativeconstruct fix issu",
        "files": [
            {
                "path": "flang/lib/Semantics/resolve-names.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 142564,
        "processed_text": "flang extend local support region extend support local specifi support data type need region unifi path taken compil privat claus local specifi",
        "files": [
            {
                "path": "flang/include/flang/Lower/Support/PrivateReductionUtils.h",
                "role": "other"
            },
            {
                "path": "flang/include/flang/Lower/Support/Utils.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Lower/Bridge.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/ReductionProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/Support/PrivateReductionUtils.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/Support/Utils.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 142589,
        "processed_text": "openmpoffload typo error messag appear spell incorrect test case least machin rocm version chanc test rocm version version would interest result someon chanc",
        "files": [
            {
                "path": "offload/test/sanitizer/ptr_outside_alloc_1.c",
                "role": "other"
            },
            {
                "path": "offload/test/sanitizer/ptr_outside_alloc_2.c",
                "role": "other"
            },
            {
                "path": "offload/test/sanitizer/use_after_free_1.c",
                "role": "other"
            },
            {
                "path": "offload/test/sanitizer/use_after_free_2.c",
                "role": "other"
            }
        ]
    },
    {
        "number": 142595,
        "processed_text": "flangopenmp show error task depend valid modifi task depend claus given valid task dependec type modifi semant check claus result ice assum modifi present check whether modifi present show appropri error instead crash compil fix",
        "files": [
            {
                "path": "flang/lib/Semantics/check-omp-structure.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 142783,
        "processed_text": "flangopenmp make static durat variabl default share dsa accord standard variabl static storag durat predetermin share add check creat implicit symbol erron get set firstpriv fix",
        "files": [
            {
                "path": "flang/include/flang/Semantics/symbol.h",
                "role": "other"
            },
            {
                "path": "flang/lib/Semantics/resolve-directives.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Semantics/resolve-names.cpp",
                "role": "flang"
            }
        ]
    },
    {
        "number": 142997,
        "processed_text": "mliropenmp set correct insert point creat barrier fix",
        "files": [
            {
                "path": "mlir/lib/Target/LLVMIR/Dialect/OpenMP/OpenMPToLLVMIRTranslation.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 143021,
        "processed_text": "utilstablegen handl version clausedirect spell getlangdirectivenamekind version return spell correspond version getlangdirectivekindandversionsnam return pair kind versionrang versionrang contain minimum maximum version allow name spell appli claus well gener appli class spell defin via tablegen class spell given kind version get correspond spell requir runtim search fail gener case avoid gener search function inlin small addit compon llvmfrontent ad llvmfrontenddirect correspond header file also defin class spell versionrang use tablegendirectiveemitt well background inform see httpsdiscoursellvmorgtrfcalternativespellingsofopenmpdirect",
        "files": [
            {
                "path": "llvm/include/llvm/Frontend/Directive/DirectiveBase.td",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/Frontend/Directive/Spelling.h",
                "role": "other"
            },
            {
                "path": "llvm/include/llvm/TableGen/DirectiveEmitter.h",
                "role": "other"
            },
            {
                "path": "llvm/lib/Frontend/Directive/Spelling.cpp",
                "role": "other"
            },
            {
                "path": "llvm/test/TableGen/directive1.td",
                "role": "other"
            },
            {
                "path": "llvm/test/TableGen/directive2.td",
                "role": "other"
            },
            {
                "path": "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp",
                "role": "other"
            }
        ]
    },
    {
        "number": 143383,
        "processed_text": "flangopenmp detect nest construct recogn privat construct exclud symbol nonprivat one",
        "files": [
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.cpp",
                "role": "flang"
            },
            {
                "path": "flang/lib/Lower/OpenMP/DataSharingProcessor.h",
                "role": "flang"
            }
        ]
    },
    {
        "number": 143531,
        "processed_text": "mliropenmp reintroduc todo translat linear claus reintroduc todo linear claus translat unless corner issu like linear variabl entiti support linear variabl type integ solv",
        "files": [
            {
                "path": "mlir/lib/Target/LLVMIR/Dialect/OpenMP/OpenMPToLLVMIRTranslation.cpp",
                "role": "other"
            }
        ]
    }
]