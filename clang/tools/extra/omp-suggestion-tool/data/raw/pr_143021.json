{
    "number": 143021,
    "title": "[utils][TableGen] Handle versions on clause/directive spellings",
    "body": "In \"get<lang>DirectiveName(Kind, Version)\", return the spelling that corresponds to Version, and in \"get<lang>DirectiveKindAndVersions(Name)\" return the pair {Kind, VersionRange}, where VersionRange contains the minimum and the maximum versions that allow \"Name\" as a spelling. This applies to clauses as well. In general it applies to classes that have spellings (defined via TableGen class \"Spelling\").\r\n\r\nGiven a Kind and a Version, getting the corresponding spelling requires a runtime search (which can fail in a general case). To avoid generating the search function inline, a small additional component of llvm/Frontent was added: LLVMFrontendDirective. The corresponding header file also defines C++ classes \"Spelling\" and \"VersionRange\", which are used in TableGen/DirectiveEmitter as well.\r\n\r\nFor background information see\r\nhttps://discourse.llvm.org/t/rfc-alternative-spellings-of-openmp-directives/85507",
    "created_at": "2025-06-05T18:58:14Z",
    "merged_at": "2025-06-06T22:07:25Z",
    "user": "kparzysz",
    "files": [
        "llvm/include/llvm/Frontend/Directive/DirectiveBase.td",
        "llvm/include/llvm/Frontend/Directive/Spelling.h",
        "llvm/include/llvm/TableGen/DirectiveEmitter.h",
        "llvm/lib/Frontend/CMakeLists.txt",
        "llvm/lib/Frontend/Directive/CMakeLists.txt",
        "llvm/lib/Frontend/Directive/Spelling.cpp",
        "llvm/lib/Frontend/OpenACC/CMakeLists.txt",
        "llvm/lib/Frontend/OpenMP/CMakeLists.txt",
        "llvm/test/TableGen/directive1.td",
        "llvm/test/TableGen/directive2.td",
        "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp"
    ],
    "commits": [
        "[utils][TableGen] Handle versions on clause/directive spellings\n\nIn \"get<lang>DirectiveName(Kind, Version)\", return the spelling that\ncorresponds to Version, and in \"get<lang>DirectiveKindAndVersions(Name)\"\nreturn the pair {Kind, VersionRange}, where VersionRange contains the\nminimum and the maximum versions that allow \"Name\" as a spelling.\nThis applies to clauses as well. In general it applies to classes that\nhave spellings (defined via TableGen class \"Spelling\").\n\nGiven a Kind and a Version, getting the corresponding spelling requires\na runtime search (which can fail in a general case). To avoid generating\nthe search function inline, a small additional component of llvm/Frontent\nwas added: LLVMFrontendDirective. The corresponding header file also\ndefines C++ classes \"Spelling\" and \"VersionRange\", which are used in\nTableGen/DirectiveEmitter as well.\n\nFor background information see\nhttps://discourse.llvm.org/t/rfc-alternative-spellings-of-openmp-directives/85507",
        "Use linear search instead of std::lower_bound",
        "Set the minimum possible version to 0 instead of 1\n\nThe default value of the Version parameter in get<Lang><Enum>Name()\nwas 0, which was not in the range [1, 0x7fffffff]. To fix this, it\nwas either to change the default value to 1, or to lower the minimum\nversion to 0. The latter seemed like a better choice, since 0 is a\nnatural choice for a lower bound on version numbers.",
        "Fix testcase",
        "Use BaseRecord instead of Clause for getSpellings()",
        "Address review comments",
        "format"
    ]
}