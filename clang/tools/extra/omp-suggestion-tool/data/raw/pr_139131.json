{
    "number": 139131,
    "title": "[flang][OpenMP] Pass OpenMP version to getOpenMPDirectiveName",
    "body": "The OpenMP version is stored in LangOptions in SemanticsContext. Use the fallback version where SemanticsContext is unavailable (mostly in case of debug dumps).\r\n\r\nRFC: https://discourse.llvm.org/t/rfc-alternative-spellings-of-openmp-directives/85507",
    "created_at": "2025-05-08T19:05:00Z",
    "merged_at": "2025-05-09T12:42:15Z",
    "user": "kparzysz",
    "files": [
        "clang/include/clang/AST/OpenMPClause.h",
        "clang/lib/AST/DeclPrinter.cpp",
        "clang/lib/AST/OpenMPClause.cpp",
        "clang/lib/AST/StmtPrinter.cpp",
        "clang/lib/Basic/OpenMPKinds.cpp",
        "clang/lib/Parse/ParseOpenMP.cpp",
        "clang/lib/Sema/SemaOpenMP.cpp",
        "clang/lib/Sema/TreeTransform.h",
        "flang/examples/FlangOmpReport/FlangOmpReportVisitor.cpp",
        "flang/include/flang/Parser/dump-parse-tree.h",
        "flang/include/flang/Parser/unparse.h",
        "flang/include/flang/Semantics/unparse-with-symbols.h",
        "flang/lib/Frontend/ParserActions.cpp",
        "flang/lib/Lower/OpenMP/ClauseProcessor.h",
        "flang/lib/Lower/OpenMP/Decomposer.cpp",
        "flang/lib/Lower/OpenMP/OpenMP.cpp",
        "flang/lib/Parser/openmp-parsers.cpp",
        "flang/lib/Parser/parse-tree.cpp",
        "flang/lib/Parser/unparse.cpp",
        "flang/lib/Semantics/check-omp-structure.cpp",
        "flang/lib/Semantics/mod-file.cpp",
        "flang/lib/Semantics/resolve-directives.cpp",
        "flang/lib/Semantics/unparse-with-symbols.cpp",
        "llvm/include/llvm/Frontend/OpenMP/OMP.h",
        "llvm/unittests/Frontend/OpenMPDecompositionTest.cpp",
        "llvm/unittests/Frontend/OpenMPParsingTest.cpp",
        "llvm/utils/TableGen/Basic/DirectiveEmitter.cpp"
    ],
    "commits": [
        "[LLVM][OpenMP] Add \"version\" parameter to getOpenMPDirectiveName\n\nSome OpenMP directives have different spellings in different versions\nof the OpenMP spec. To use the proper spelling for a given spec version\npass \"version\" as a parameter to getOpenMPDirectiveName.\n\nThis parameter won't be used at the moment, and will have a default\nvalue to allow callers not to pass it, for gradual adoption in various\ncomponents.\n\nRFC: https://discourse.llvm.org/t/rfc-alternative-spellings-of-openmp-directives/85507",
        "[clang][OpenMP] Pass OpenMP version to getOpenMPDirectiveName\n\nThe OpenMP version is stored in language options in Sema. For use in\nobjects that do not have access to Sema, add OpenMP version field to\nPrintingPolicy, giving it 8 bits.\n\nRFC: https://discourse.llvm.org/t/rfc-alternative-spellings-of-openmp-directives/85507",
        "format",
        "Store OMP version in OMPClausePrinter, remove it from PrintingPolicy",
        "format",
        "more format",
        "Don't put OpenMP \"Version\" in StmtPrinter",
        "[flang][OpenMP] Pass OpenMP version to getOpenMPDirectiveName\n\nThe OpenMP version is stored in LangOptions in SemanticsContext. Use the\nfallback version where SemanticsContext is unavailable (mostly in case of\ndebug dumps).\n\nRFC: https://discourse.llvm.org/t/rfc-alternative-spellings-of-openmp-directives/85507",
        "Remove leftover include",
        "OMPVersion -> ompVersion in unparse.cpp",
        "format"
    ]
}