{
    "number": 139064,
    "title": "[OpenMP][OMPIRBuilder] Collect users of a value before replacing them in target outlined function",
    "body": "This PR fixes a crash that curently happens given the following input:\r\n```fortran\r\nsubroutine caller()\r\n  real :: x\r\n  integer :: i\r\n\r\n  !$omp target\r\n    x = i\r\n    call callee(x,x)\r\n  !$omp end target\r\nendsubroutine caller\r\n\r\nsubroutine callee(x1,x2)\r\n  real :: x1, x2\r\nendsubroutine callee\r\n```\r\n\r\nThe crash happens because the following sequence of events is taken by the `OMPIRBuilder`:\r\n1. ....\r\n2. An outlined function for the target region is created. At first the outlined function still refers to the SSA values from the original function of the target region.\r\n3. The builder then iterates over the users of SSA values used in the target region to replace them with the corresponding function arguments of outlined function.\r\n4. If the same instruction references the SSA value more than once (say m), all uses of that SSA value are replaced in the instruction. Deleting all m uses of the value.\r\n5. The next m-1 iterations will still iterate over the same instruction dropping the last m-1 actual users of the value.\r\n\r\nHence, we collect all users first before modifying them.",
    "created_at": "2025-05-08T11:06:49Z",
    "merged_at": "2025-05-28T15:40:34Z",
    "user": "ergawy",
    "files": [
        "llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp",
        "mlir/test/Target/LLVMIR/omp-target-call-with-repeated-parameter.mlir"
    ],
    "commits": [
        "[OpenMP][OMPIRBuilder] Collect users of a value before replacing them in target outlined function\n\nThis PR fixes a crash that curently happens given the following input:\n```fortran\nsubroutine caller()\n  real :: x, y, z\n  integer :: i\n\n  !$omp target\n    x = i\n    call callee(x,x)\n  !$omp end target\nendsubroutine caller\n\nsubroutine callee(x1,x2)\n  real :: x1, x2\nendsubroutine callee\n```\n\nThe crash happens because the following sequence of events is taken by\nthe `OMPIRBuilder`:\n1.   ....\nn.   An outlined function for the target region is created. At first the\n     outlined function still refers to the SSA values from the original\n     function of the target region.\nn+1. The builder then iterates over the users of SSA values used in the\n     target region to replace them with the corresponding function arguments\n     of outlined function.\nn+2. If the same instruction references the SSA value more than once (say m),\n     all uses of that SSA value are replaced in the instruction.\n     Deleting all m uses of the value.\nn+3. The next m-1 iterations will still iterate over the same\n     instruction dropping the last m-1 actual users of the value.\n\nHence, we call all users first before modifying them."
    ]
}