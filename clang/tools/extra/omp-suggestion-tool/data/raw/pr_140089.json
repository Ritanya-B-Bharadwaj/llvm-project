{
    "number": 140089,
    "title": "[mlir][OpenMP] add attribute for privatization barrier",
    "body": "A barrier is needed at the end of initialization/copying of private variables if any of those variables is lastprivate. This ensures that all firstprivate variables receive the original value of the variable before the lastprivate clause overwrites it.\r\n\r\nPreviously this barrier was added by the flang fontend, but there is not a reliable way to put the barrier in the correct place for delayed privatization, and the OpenMP dialect could some day have other users. It is important that there are safe ways to use the constructs available in the dialect.\r\n\r\nlastprivate is currently not modelled in the OpenMP dialect, and so there is no way to reliably determine whether there were lastprivate variables. Therefore the frontend will have to provide this information through this new attribute.\r\n\r\nPart of a series of patches to fix\r\nhttps://github.com/llvm/llvm-project/issues/136357",
    "created_at": "2025-05-15T16:05:51Z",
    "merged_at": "2025-05-22T14:24:03Z",
    "user": "tblah",
    "files": [
        "mlir/include/mlir/Dialect/OpenMP/OpenMPClauses.td",
        "mlir/include/mlir/Dialect/OpenMP/OpenMPOps.td",
        "mlir/lib/Conversion/SCFToOpenMP/SCFToOpenMP.cpp",
        "mlir/lib/Dialect/OpenMP/IR/OpenMPDialect.cpp",
        "mlir/test/Dialect/OpenMP/ops.mlir"
    ],
    "commits": [
        "[mlir][OpenMP] add attribute for privatization barrier\n\nA barrier is needed at the end of initialization/copying of private\nvariables if any of those variables is lastprivate. This ensures that\nall firstprivate variables receive the original value of the variable\nbefore the lastprivate clause overwrites it.\n\nPreviously this barrier was added by the flang fontend, but there is not\na reliable way to put the barrier in the correct place for delayed\nprivatization, and the OpenMP dialect could some day have other users.\nIt is important that there are safe ways to use the constructs available\nin the dialect.\n\nlastprivate is currently not modelled in the OpenMP dialect, and so\nthere is no way to reliably determine whether there were lastprivate\nvariables. Therefore the frontend will have to provide this information\nthrough this new attribute.\n\nPart of a series of patches to fix\nhttps://github.com/llvm/llvm-project/issues/136357"
    ]
}