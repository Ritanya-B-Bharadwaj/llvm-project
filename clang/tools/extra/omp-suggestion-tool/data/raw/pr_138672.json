{
    "number": 138672,
    "title": "[flang][OpenMP] share global variable initialization code",
    "body": "Fixes #108136\r\n\r\nIn #108136 (the new testcase), flang was missing the length parameter required for the variable length string when boxing the global variable. The code that is initializing global variables for OpenMP did not support types with length parameters.\r\n\r\nInstead of duplicating this initialization logic in OpenMP, I decided to use the exact same initialization as is used in the base language because this will already be well tested and will be updated for any new types. The difference for OpenMP is that the global variables will be zero initialized instead of left undefined.\r\n\r\nPreviously `Fortran::lower::createGlobalInitialization` was used to share a smaller amount of the logic with the base language lowering. I think this bug has demonstrated that helper was too low level to be helpful, and it was only used in OpenMP so I have made it static inside of ConvertVariable.cpp.",
    "created_at": "2025-05-06T10:31:10Z",
    "merged_at": "2025-05-07T09:18:13Z",
    "user": "tblah",
    "files": [
        "flang/docs/OpenMPSupport.md",
        "flang/include/flang/Lower/ConvertVariable.h",
        "flang/lib/Lower/ConvertVariable.cpp",
        "flang/lib/Lower/OpenMP/OpenMP.cpp",
        "flang/test/Lower/OpenMP/omp-declare-target-program-var.f90",
        "flang/test/Lower/OpenMP/threadprivate-host-association-2.f90",
        "flang/test/Lower/OpenMP/threadprivate-host-association-3.f90",
        "flang/test/Lower/OpenMP/threadprivate-lenparams.f90",
        "flang/test/Lower/OpenMP/threadprivate-non-global.f90"
    ],
    "commits": [
        "[flang][OpenMP] share global variable initialization code\n\nFixes #108136\n\nIn #108136 (the new testcase), flang was missing the length parameter\nrequired for the variable length string when boxing the global variable.\nThe code that is initializing global variables for OpenMP did not\nsupport types with length parameters.\n\nInstead of duplicating this initialization logic in OpenMP, I decided to\nuse the exact same initialization as is used in the base language\nbecause this will already be well tested and will be updated for any new\ntypes. The difference for OpenMP is that the global variables will be\nzero initialized instead of left undefined.\n\nPreviously `Fortran::lower::createGlobalInitialization` was used to\nshare a smaller amount of the logic with the base language lowering. I\nthink this bug has demonstrated that helper was too low level to be\nhelpful, and it was only used in OpenMP so I have made it static inside\nof ConvertVariable.cpp."
    ]
}