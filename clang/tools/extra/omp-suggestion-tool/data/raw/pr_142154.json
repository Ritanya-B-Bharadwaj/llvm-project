{
    "number": 142154,
    "title": "[flang][OpenMP] Explicitly set Shared DSA in symbols",
    "body": "Before this change, OmpShared was not always set in shared symbols.\r\nInstead, absence of private flags was interpreted as shared DSA.\r\nThe problem was that symbols with no flags, with only a host\r\nassociation, could also mean \"has same DSA as in the enclosing\r\ncontext\". Now shared symbols behave the same as private and can be\r\ntreated the same way.\r\n\r\nBecause of the host association symbols with no flags mentioned\r\nabove, it was also incorrect to simply test the flags of a given\r\nsymbol to find out if it was private or shared. The function\r\nGetSymbolDSA() was added to fix this. It would be better to avoid\r\nthe need of these special symbols, but this would require changes\r\nto how symbols are collected in lowering.\r\n\r\nBesides that, some semantic checks need to know if a DSA clause\r\nwas used or not. To avoid confusing implicit symbols with DSA\r\nclauses a new flag was added: OmpExplicit. It is now set for all\r\nsymbols with explicitly determined data-sharing attributes.\r\n\r\nWith the changes above, AddToContextObjectWithDSA() and the symbol\r\nto DSA map could probably be removed and the DSA could be obtained\r\ndirectly from the symbol, but this was not attempted.\r\n\r\nSome debug messages were also added, with the \"omp\" DEBUG_TYPE, to\r\nmake it easier to debug the creation of implicit symbols and to\r\nvisualize all associations of a given symbol.\r\n\r\nFixes #130533\r\nFixes #140882",
    "created_at": "2025-05-30T14:13:30Z",
    "merged_at": "2025-06-03T13:58:23Z",
    "user": "luporl",
    "files": [
        "flang/include/flang/Semantics/openmp-dsa.h",
        "flang/include/flang/Semantics/symbol.h",
        "flang/lib/Lower/Bridge.cpp",
        "flang/lib/Semantics/CMakeLists.txt",
        "flang/lib/Semantics/openmp-dsa.cpp",
        "flang/lib/Semantics/resolve-directives.cpp",
        "flang/test/Semantics/OpenMP/common-block.f90",
        "flang/test/Semantics/OpenMP/copyprivate03.f90",
        "flang/test/Semantics/OpenMP/default-clause.f90",
        "flang/test/Semantics/OpenMP/do05-positivecase.f90",
        "flang/test/Semantics/OpenMP/do20.f90",
        "flang/test/Semantics/OpenMP/forall.f90",
        "flang/test/Semantics/OpenMP/implicit-dsa.f90",
        "flang/test/Semantics/OpenMP/reduction08.f90",
        "flang/test/Semantics/OpenMP/reduction09.f90",
        "flang/test/Semantics/OpenMP/reduction11.f90",
        "flang/test/Semantics/OpenMP/scan2.f90",
        "flang/test/Semantics/OpenMP/symbol01.f90",
        "flang/test/Semantics/OpenMP/symbol02.f90",
        "flang/test/Semantics/OpenMP/symbol03.f90",
        "flang/test/Semantics/OpenMP/symbol04.f90",
        "flang/test/Semantics/OpenMP/symbol05.f90",
        "flang/test/Semantics/OpenMP/symbol06.f90",
        "flang/test/Semantics/OpenMP/symbol07.f90",
        "flang/test/Semantics/OpenMP/symbol08.f90",
        "flang/test/Semantics/OpenMP/symbol09.f90"
    ],
    "commits": [
        "[flang][OpenMP] Explicitly set Shared DSA in symbols\n\nBefore this change, OmpShared was not always set in shared symbols.\nInstead, absence of private flags was interpreted as shared DSA.\nThe problem was that symbols with no flags, with only a host\nassociation, could also mean \"has same DSA as in the enclosing\ncontext\". Now shared symbols behave the same as private and can be\ntreated the same way.\n\nBecause of the host association symbols with no flags mentioned\nabove, it was also incorrect to simply test the flags of a given\nsymbol to find out if it was private or shared. The function\nGetSymbolDSA() was added to fix this. It would be better to avoid\nthe need of these special symbols, but this would require changes\nto how symbols are collected in lowering.\n\nBesides that, some semantic checks need to know if a DSA clause\nwas used or not. To avoid confusing implicit symbols with DSA\nclauses a new flag was added: OmpExplicit. It is now set for all\nsymbols with explicitly determined data-sharing attributes.\n\nWith the changes above, AddToContextObjectWithDSA() and the symbol\nto DSA map could probably be removed and the DSA could be obtained\ndirectly from the symbol, but this was not attempted.\n\nSome debug messages were also added, with the \"omp\" DEBUG_TYPE, to\nmake it easier to debug the creation of implicit symbols and to\nvisualize all associations of a given symbol.\n\nFixes #130533\nFixes #140882",
        "Add a comment explaining a new test"
    ]
}