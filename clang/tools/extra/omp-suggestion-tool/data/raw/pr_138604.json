{
    "number": 138604,
    "title": "[AMDGPU] Move InferAddressSpacesPass to middle end optimization pipeline",
    "body": "It will run twice in the non-LTO pipeline with `O1` or higher:\r\n\r\n<details>\r\n\r\n```\r\nannotation2metadata\r\nforceattrs\r\ninferattrs\r\ncoro-early\r\nfunction<eager-inv>(\r\n  ee-instrument<>\r\n  lower-expect\r\n  simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;no-switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>\r\n  sroa<modify-cfg>\r\n  early-cse<>)\r\nopenmp-opt\r\namdgpu-printf-runtime-binding\r\namdgpu-unify-metadata\r\nipsccp\r\ncalled-value-propagation\r\nglobalopt\r\nfunction<eager-inv>(\r\n  mem2reg\r\n  instcombine<max-iterations=1;no-verify-fixpoint>\r\n  amdgpu-usenative\r\n  amdgpu-simplifylib\r\n  simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>)\r\nalways-inline\r\nrequire<globals-aa>\r\nfunction(invalidate<aa>)\r\nrequire<profile-summary>\r\ncgscc(\r\n  devirt<4>(\r\n    inline\r\n    function-attrs<skip-non-recursive-function-attrs>\r\n    function(\r\n      infer-address-spaces\r\n      amdgpu-lower-kernel-attributes\r\n      amdgpu-promote-alloca-to-vector)\r\n    function<eager-inv;no-rerun>(sroa<modify-cfg>\r\n    early-cse<memssa>\r\n    simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>\r\n    instcombine<max-iterations=1;no-verify-fixpoint>\r\n    libcalls-shrinkwrap\r\n    amdgpu-usenative\r\n    amdgpu-simplifylib\r\n    simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>\r\n    reassociate\r\n    loop-mssa(\r\n      loop-instsimplify\r\n      loop-simplifycfg\r\n      licm<no-allowspeculation>\r\n      loop-rotate<header-duplication;no-prepare-for-lto>\r\n      licm<allowspeculation>\r\n      simple-loop-unswitch<no-nontrivial;trivial>)\r\n      simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>\r\n      instcombine<max-iterations=1;no-verify-fixpoint>\r\n      loop(\r\n        loop-idiom\r\n        indvars\r\n        loop-deletion\r\n        loop-unroll-full)\r\n      sroa<modify-cfg>\r\n      memcpyopt\r\n      sccp\r\n      bdce\r\n      instcombine<max-iterations=1;no-verify-fixpoint>\r\n      amdgpu-usenative\r\n      amdgpu-simplifylib\r\n      coro-elide\r\n      infer-address-spaces\r\n      adce\r\n      simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>\r\n      instcombine<max-iterations=1;no-verify-fixpoint>\r\n      amdgpu-usenative\r\n      amdgpu-simplifylib)\r\n    function-attrs\r\n    function(require<should-not-run-function-passes>)\r\n    coro-split\r\n    coro-annotation-elide))\r\ndeadargelim\r\ncoro-cleanup\r\nglobalopt\r\nglobaldce\r\nelim-avail-extern\r\nrpo-function-attrs\r\nrecompute-globalsaa\r\nfunction<eager-inv>(float2int\r\nlower-constant-intrinsics\r\nloop(\r\n  loop-rotate<header-duplication;no-prepare-for-lto>\r\n  loop-deletion)\r\nloop-distribute\r\ninject-tli-mappings\r\nloop-vectorize<no-interleave-forced-only;vectorize-forced-only;>\r\ninfer-alignment\r\nloop-load-elim\r\ninstcombine<max-iterations=1;no-verify-fixpoint>\r\nsimplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>\r\nvector-combine\r\ninstcombine<max-iterations=1;no-verify-fixpoint>\r\nloop-unroll<O1>\r\ntransform-warning\r\nsroa<preserve-cfg>\r\ninfer-alignment\r\ninstcombine<max-iterations=1;no-verify-fixpoint>\r\nloop-mssa(licm<allowspeculation>)\r\nalignment-from-assumptions\r\nloop-sink\r\ninstsimplify\r\ndiv-rem-pairs\r\ntailcallelim\r\nsimplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)\r\namdgpu-attributor\r\nglobaldce\r\nconstmerge\r\ncg-profile\r\nrel-lookup-table-converter\r\nfunction(annotation-remarks)\r\nverify\r\nprint\r\n```\r\n\r\n</details>\r\n\r\nIn LTO post link pipeline, it will be run once with `O2` or higher, since inline and SROA don't run in `O1`.\r\n\r\n<details>\r\n\r\n```\r\ncross-dso-cfiopenmp-opt\r\nglobaldce<vfe-linkage-unit-visibility>\r\ninferattrs\r\nfunction<eager-inv>(callsite-splitting)\r\npgo-icall-prom\r\ncgscc(\r\n  function-attrs\r\n  argpromotion\r\n  function(sroa<modify-cfg>))\r\nipsccp\r\ncalled-value-propagation\r\nrpo-function-attrs\r\nglobalsplit\r\nwholeprogramdevirt\r\ncoro-early\r\nglobalopt\r\nfunction(mem2reg)\r\nconstmerge\r\ndeadargelim\r\nfunction<eager-inv>(\r\n  instcombine<max-iterations=1;no-verify-fixpoint>\r\n  aggressive-instcombine\r\n  amdgpu-usenative\r\n  amdgpu-simplifylib)\r\nexpand-variadics\r\ncgscc(inline<only-mandatory>\r\ninline)\r\nglobalopt\r\nopenmp-opt\r\nglobaldce<vfe-linkage-unit-visibility>\r\ncgscc(\r\n  argpromotion\r\n  coro-split\r\n  coro-annotation-elide)\r\nfunction<eager-inv>(\r\n  instcombine<max-iterations=1;no-verify-fixpoint>\r\n  amdgpu-usenative\r\n  amdgpu-simplifylib\r\n  constraint-elimination\r\n  jump-threading\r\n  sroa<modify-cfg>\r\n  tailcallelim)\r\ncgscc(function-attrs)\r\nrequire<globals-aa>\r\nfunction(invalidate<aa>)\r\ncgscc(openmp-opt-cgscc)\r\nfunction<eager-inv>(\r\n  loop-mssa(licm<allowspeculation>)\r\n  gvn<>\r\n  memcpyopt\r\n  dse\r\n  move-auto-init\r\n  mldst-motion<no-split-footer-bb>\r\n  loop(\r\n    indvars\r\n    loop-deletion\r\n    loop-unroll-full)\r\n  loop-distribute\r\n  loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>\r\n  infer-alignment\r\n  loop-unroll<O2>\r\n  transform-warning\r\n  sroa<preserve-cfg>\r\n  instcombine<max-iterations=1;no-verify-fixpoint>\r\n  simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>\r\n  sccp\r\n  instcombine<max-iterations=1;no-verify-fixpoint>\r\n  bdce\r\n  slp-vectorizer\r\n  vector-combine\r\n  infer-alignment\r\n  instcombine<max-iterations=1;no-verify-fixpoint>\r\n  loop-mssa(licm<allowspeculation>)\r\n  alignment-from-assumptions\r\n  amdgpu-usenative\r\n  amdgpu-simplifylib\r\n  jump-threading)\r\nlowertypetests\r\nlowertypetests\r\nfunction(\r\n  loop-sink\r\n  div-rem-pairs\r\n  simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)\r\nelim-avail-extern\r\nglobaldce<vfe-linkage-unit-visibility>\r\nrel-lookup-table-converter\r\ncg-profile\r\ncoro-cleanup\r\namdgpu-sw-lower-lds\r\namdgpu-lower-module-lds\r\nfunction(infer-address-spaces)\r\namdgpu-attributor\r\nfunction(kernel-info)\r\nfunction(annotation-remarks)\r\nverify\r\nprint\r\n```\r\n\r\n</details>",
    "created_at": "2025-05-05T22:43:43Z",
    "merged_at": "2025-05-29T21:20:56Z",
    "user": "shiltian",
    "files": [
        "llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp",
        "llvm/test/CodeGen/AMDGPU/GlobalISel/divergent-control-flow.ll",
        "llvm/test/CodeGen/AMDGPU/branch-folding-implicit-def-subreg.ll",
        "llvm/test/CodeGen/AMDGPU/gep-const-address-space.ll",
        "llvm/test/CodeGen/AMDGPU/global-atomicrmw-fadd.ll",
        "llvm/test/CodeGen/AMDGPU/infer-addrspace-flat-atomic.ll",
        "llvm/test/CodeGen/AMDGPU/llc-pipeline.ll",
        "llvm/test/CodeGen/AMDGPU/simple-indirect-call.ll",
        "llvm/test/CodeGen/AMDGPU/swdev282079.ll",
        "llvm/test/CodeGen/AMDGPU/uniform_branch_with_floating_point_cond.ll",
        "llvm/test/Transforms/InferAddressSpaces/AMDGPU/global-atomicrmw-fadd.ll",
        "llvm/test/Transforms/PhaseOrdering/AMDGPU/infer-address-space.ll",
        "llvm/test/Transforms/PhaseOrdering/AMDGPU/lit.local.cfg"
    ],
    "commits": [
        "[AMDGPU] Don't run InferAddressSpacesPass in code generation pipeline"
    ]
}