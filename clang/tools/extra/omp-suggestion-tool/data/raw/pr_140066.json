{
    "number": 140066,
    "title": "[flang][openmp]Add UserReductionDetails and use in DECLARE REDUCTION",
    "body": "This adds another puzzle piece for the support of OpenMP DECLARE REDUCTION functionality.\r\n\r\nThis adds support for operators with derived types, as well as declaring multiple different types with the same name or operator.\r\n\r\nA new detail class for UserReductionDetials is introduced to hold the list of types supported for a given reduction declaration.\r\n\r\nTests for parsing and symbol generation added.\r\n\r\nDeclare reduction is still not supported to lowering, it will generate a \"Not yet implemented\" fatal error.\r\n\r\nFixes #141306\r\nFixes #97241\r\nFixes #92832\r\nFixes #66453",
    "created_at": "2025-05-15T14:28:18Z",
    "merged_at": "2025-06-09T10:17:03Z",
    "user": "tblah",
    "files": [
        "flang/include/flang/Semantics/symbol.h",
        "flang/lib/Parser/unparse.cpp",
        "flang/lib/Semantics/assignment.cpp",
        "flang/lib/Semantics/assignment.h",
        "flang/lib/Semantics/check-omp-structure.cpp",
        "flang/lib/Semantics/mod-file.cpp",
        "flang/lib/Semantics/mod-file.h",
        "flang/lib/Semantics/resolve-names-utils.h",
        "flang/lib/Semantics/resolve-names.cpp",
        "flang/lib/Semantics/symbol.cpp",
        "flang/test/Parser/OpenMP/declare-reduction-multi.f90",
        "flang/test/Parser/OpenMP/declare-reduction-operator.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-bad-operator.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-bad-operator2.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-dupsym.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-error.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-functions.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-logical.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-mangled.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-modfile.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-operator.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-operators.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-renamedop.f90",
        "flang/test/Semantics/OpenMP/declare-reduction-typeerror.f90",
        "flang/test/Semantics/OpenMP/declare-reduction.f90"
    ],
    "commits": [
        "[flang][openmp]Add UserReductionDetails and use in DECLARE REDUCTION\n\nThis adds another puzzle piece for the support of OpenMP DECLARE\nREDUCTION functionality.\n\nThis adds support for operators with derived types, as well as declaring\nmultiple different types with the same name or operator.\n\nA new detail class for UserReductionDetials is introduced to hold\nthe list of types supported for a given reduction declaration.\n\nTests for parsing and symbol generation added.\n\nDeclare reduction is still not supported to lowering, it\nwill generate a \"Not yet implemented\" fatal error.",
        "Fix review comments\n\n* Add two more tests (multiple operator-based declarations and re-using\n  symbol already declared.\n* Add a few comments.\n* Fix up logical results.",
        "Use stringswitch and spell details correctly",
        "Add support for user defined operators in declare reduction\n\nAlso print the reduction declaration in the module file.\n\nFix trivial typo.\n\nAdd/modify tests to cover all the new things, including fixing\nthe duplicated typo in the test...",
        "Fix nit comments and add simple bad operator test",
        "Fix error messages to be more consistent",
        "add missed test change",
        "Improve support for metadirective + declare reduction",
        "Fix Klausler reported review comments\n\nAlso rebase, as the branch was quite a way behind. Small conflict\nwas resolved.",
        "Fix some semantics issues",
        "[Flang][OpenMP] Fix review comment failed examples\n\nAdd code to better handle operators in parsing and semantics.\nAdd a function to set the the scope when processign assignments,\nwhich caused a crash in \"check for pure functions\".\n\nAdd three new tests and amend existing tests to cover a pure function.",
        "Fix review comments",
        "Fix typo in test",
        "Use braced initialization",
        "Don't create a new parser::Name on the stack",
        "Remove StoreUserReductionName",
        "Clang format",
        "Use emplace_back for non-trivial vector element type",
        "Change error to unreachable",
        "Manual clang-format",
        "Fix tests\n\nI had to rebase to reproduce the test failure",
        "Review comments"
    ]
}