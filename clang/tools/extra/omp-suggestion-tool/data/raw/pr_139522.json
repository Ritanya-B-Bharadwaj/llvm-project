{
    "number": 139522,
    "title": "[flang][OpenMP][Semantics] resolve objects in the flush arg list",
    "body": "Fixes #136583\r\n\r\nNormally the flush argument list would contain a DataRef to some variable. All DataRefs are handled generically in resolve-names and so the problem wasn't observed. But when a common block name is specified, this is not parsed as a DataRef. There was already handling in resolve-directives for OmpObjectList but not for argument lists. I've added a visitor for FLUSH which ensures all of the arguments have been resolved.\r\n\r\nThe test is there to make sure the compiler doesn't crashed encountering the unresolved symbol. It shows that we currently deny flushing a common block. I'm not sure that it is right to restrict common blocks from flush argument lists, but fixing that can come in a different patch. This one is fixing an ICE.",
    "created_at": "2025-05-12T09:46:18Z",
    "merged_at": "2025-05-13T09:14:03Z",
    "user": "tblah",
    "files": [
        "flang/lib/Semantics/resolve-directives.cpp",
        "flang/test/Semantics/OpenMP/flush04.f90"
    ],
    "commits": [
        "[flang][OpenMP][Semantics] resolve objects in the flush arg list\n\nFixes #136583\n\nNormally the flush argument list would contain a DataRef to some\nvariable. All DataRefs are handled generically in resolve-names and so\nthe problem wasn't observed. But when a common block name is specified,\nthis is not parsed as a DataRef. There was already handling in\nresolve-directives for OmpObjectList but not for argument lists. I've\nadded a visitor for FLUSH which ensures all of the arguments have been\nresolved.\n\nThe test is there to make sure the compiler doesn't crashed encountering\nthe unresolved symbol. It shows that we currently deny flushing a common\nblock. I'm not sure that it is right to restrict common blocks from flush\nargument lists, but fixing that can come in a different patch. This one\nis fixing an ICE.",
        "Respond to review feedback"
    ]
}