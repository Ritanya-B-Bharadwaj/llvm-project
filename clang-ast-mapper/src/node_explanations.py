"""
Node Explanations Module
Provides human-readable explanations for AST node types
"""

class NodeExplanations:
    """Provides explanations for various AST node types."""
    
    def __init__(self):
        self.explanations = {
            # Basic declarations
            'TranslationUnitDecl': 'translation unit (entire file)',
            'FunctionDecl': 'function declaration',
            'VarDecl': 'variable declaration',
            'ParmVarDecl': 'parameter variable declaration',
            'FieldDecl': 'field declaration',
            'TypedefDecl': 'typedef declaration',
            'EnumDecl': 'enum declaration',
            'EnumConstantDecl': 'enum constant declaration',
            'RecordDecl': 'record (struct/union) declaration',
            'UsingDecl': 'using declaration',
            'UsingDirectiveDecl': 'using directive declaration',
            'NamespaceDecl': 'namespace declaration',
            'LinkageSpecDecl': 'linkage specification declaration',
            
            # C++ specific declarations
            'CXXRecordDecl': 'C++ class/struct declaration',
            'CXXMethodDecl': 'C++ method declaration',
            'CXXConstructorDecl': 'C++ constructor declaration',
            'CXXDestructorDecl': 'C++ destructor declaration',
            'CXXConversionDecl': 'C++ conversion function declaration',
            'CXXOperatorDecl': 'C++ operator declaration',
            'ClassTemplateDecl': 'class template declaration',
            'FunctionTemplateDecl': 'function template declaration',
            'TemplateTypeParmDecl': 'template type parameter declaration',
            'NonTypeTemplateParmDecl': 'non-type template parameter declaration',
            'AccessSpecDecl': 'access specifier (public/private/protected)',
            'FriendDecl': 'friend declaration',
            'StaticAssertDecl': 'static assertion declaration',
            
            # Statements
            'CompoundStmt': 'compound statement (block)',
            'DeclStmt': 'declaration statement',
            'ExprStmt': 'expression statement',
            'ReturnStmt': 'return statement',
            'IfStmt': 'if statement',
            'SwitchStmt': 'switch statement',
            'CaseStmt': 'case statement',
            'DefaultStmt': 'default statement',
            'WhileStmt': 'while loop statement',
            'DoStmt': 'do-while loop statement',
            'ForStmt': 'for loop statement',
            'CXXForRangeStmt': 'C++ range-based for loop statement',
            'BreakStmt': 'break statement',
            'ContinueStmt': 'continue statement',
            'GotoStmt': 'goto statement',
            'LabelStmt': 'label statement',
            'NullStmt': 'null statement',
            'TryStmt': 'try statement',
            'CXXCatchStmt': 'C++ catch statement',
            'CXXTryStmt': 'C++ try statement',
            'ThrowStmt': 'throw statement',
            
            # Expressions
            'BinaryOperator': 'binary operator (e.g., +, -, *, /, ==, !=)',
            'UnaryOperator': 'unary operator (e.g., ++, --, !, ~)',
            'ConditionalOperator': 'conditional operator (?:)',
            'AssignmentOperator': 'assignment operator (=, +=, -=, etc.)',
            'CompoundAssignOperator': 'compound assignment operator',
            'CallExpr': 'function call expression',
            'MemberExpr': 'member access expression',
            'ArraySubscriptExpr': 'array subscript expression',
            'DeclRefExpr': 'reference to a declaration',
            'IntegerLiteral': 'integer literal',
            'FloatingLiteral': 'floating-point literal',
            'StringLiteral': 'string literal',
            'CharacterLiteral': 'character literal',
            'BoolLiteral': 'boolean literal',
            'CXXBoolLiteralExpr': 'C++ boolean literal expression',
            'CXXNullPtrLiteralExpr': 'C++ nullptr literal expression',
            'InitListExpr': 'initialization list expression',
            'ParenExpr': 'parenthesized expression',
            'UnaryExprOrTypeTraitExpr': 'sizeof/alignof expression',
            'CStyleCastExpr': 'C-style cast expression',
            'ImplicitCastExpr': 'implicit type cast',
            'ExplicitCastExpr': 'explicit type cast',
            'CXXStaticCastExpr': 'C++ static_cast expression',
            'CXXDynamicCastExpr': 'C++ dynamic_cast expression',
            'CXXReinterpretCastExpr': 'C++ reinterpret_cast expression',
            'CXXConstCastExpr': 'C++ const_cast expression',
            'CXXFunctionalCastExpr': 'C++ functional cast expression',
            'CXXTypeidExpr': 'C++ typeid expression',
            'CXXThisExpr': 'C++ this expression',
            'CXXThrowExpr': 'C++ throw expression',
            'CXXNewExpr': 'C++ new expression',
            'CXXDeleteExpr': 'C++ delete expression',
            'CXXOperatorCallExpr': 'C++ operator call expression',
            'CXXMemberCallExpr': 'C++ member function call expression',
            'CXXConstructExpr': 'C++ constructor call expression',
            'CXXTemporaryObjectExpr': 'C++ temporary object expression',
            'CXXBindTemporaryExpr': 'C++ bind temporary expression',
            'MaterializeTemporaryExpr': 'materialize temporary expression',
            'ExprWithCleanups': 'expression with cleanups',
            'CXXDefaultArgExpr': 'C++ default argument expression',
            'CXXScalarValueInitExpr': 'C++ scalar value initialization',
            'CXXNoexceptExpr': 'C++ noexcept expression',
            'SizeOfPackExpr': 'sizeof pack expression',
            'SubstNonTypeTemplateParmExpr': 'substituted non-type template parameter',
            'DependentScopeDeclRefExpr': 'dependent scope declaration reference',
            'CXXDependentScopeMemberExpr': 'C++ dependent scope member expression',
            'UnresolvedLookupExpr': 'unresolved lookup expression',
            'UnresolvedMemberExpr': 'unresolved member expression',
            'PackExpansionExpr': 'pack expansion expression',
            'CXXFoldExpr': 'C++ fold expression',
            'ConstantExpr': 'constant expression',
            'PredefinedExpr': 'predefined expression (__func__, __FILE__, etc.)',
            'ImaginaryLiteral': 'imaginary literal',
            'CompoundLiteralExpr': 'compound literal expression',
            'ExtVectorElementExpr': 'extended vector element expression',
            'DesignatedInitExpr': 'designated initializer expression',
            'ImplicitValueInitExpr': 'implicit value initialization',
            'VAArgExpr': 'va_arg expression',
            'AddrLabelExpr': 'address of label expression',
            'StmtExpr': 'statement expression',
            'ChooseExpr': 'choose expression',
            'GNUNullExpr': 'GNU null expression',
            'ShuffleVectorExpr': 'shuffle vector expression',
            'ConvertVectorExpr': 'convert vector expression',
            'BlockExpr': 'block expression',
            'GenericSelectionExpr': 'generic selection expression',
            'AtomicExpr': 'atomic expression',
            'TypeTraitExpr': 'type trait expression',
            'ArrayTypeTraitExpr': 'array type trait expression',
            'ExpressionTraitExpr': 'expression trait expression',
            'ObjCStringLiteral': 'Objective-C string literal',
            'ObjCBoolLiteralExpr': 'Objective-C boolean literal',
            'ObjCArrayLiteral': 'Objective-C array literal',
            'ObjCDictionaryLiteral': 'Objective-C dictionary literal',
            'ObjCBoxedExpr': 'Objective-C boxed expression',
            'ObjCSubscriptRefExpr': 'Objective-C subscript reference',
            'ObjCMessageExpr': 'Objective-C message expression',
            'ObjCSelectorExpr': 'Objective-C selector expression',
            'ObjCProtocolExpr': 'Objective-C protocol expression',
            'ObjCIvarRefExpr': 'Objective-C instance variable reference',
            'ObjCPropertyRefExpr': 'Objective-C property reference',
            'ObjCIsaExpr': 'Objective-C isa expression',
            'ObjCIndirectCopyRestoreExpr': 'Objective-C indirect copy restore',
            'ObjCBridgedCastExpr': 'Objective-C bridged cast expression',
            'ObjCForCollectionStmt': 'Objective-C for-in statement',
            'ObjCAtTryStmt': 'Objective-C @try statement',
            'ObjCAtCatchStmt': 'Objective-C @catch statement',
            'ObjCAtFinallyStmt': 'Objective-C @finally statement',
            'ObjCAtThrowStmt': 'Objective-C @throw statement',
            'ObjCAtSynchronizedStmt': 'Objective-C @synchronized statement',
            'ObjCAutoreleasePoolStmt': 'Objective-C @autoreleasepool statement',
            
            # Types
            'BuiltinType': 'built-in type',
            'ComplexType': 'complex type',
            'PointerType': 'pointer type',
            'BlockPointerType': 'block pointer type',
            'ReferenceType': 'reference type',
            'LValueReferenceType': 'lvalue reference type',
            'RValueReferenceType': 'rvalue reference type',
            'MemberPointerType': 'member pointer type',
            'ArrayType': 'array type',
            'ConstantArrayType': 'constant array type',
            'IncompleteArrayType': 'incomplete array type',
            'VariableArrayType': 'variable array type',
            'DependentSizedArrayType': 'dependent sized array type',
            'VectorType': 'vector type',
            'ExtVectorType': 'extended vector type',
            'FunctionType': 'function type',
            'FunctionProtoType': 'function prototype type',
            'FunctionNoProtoType': 'function no prototype type',
            'UnresolvedUsingType': 'unresolved using type',
            'ParenType': 'parenthesized type',
            'TypedefType': 'typedef type',
            'TypeOfExprType': 'typeof expression type',
            'TypeOfType': 'typeof type',
            'DecltypeType': 'decltype type',
            'UnaryTransformType': 'unary transform type',
            'TagType': 'tag type',
            'RecordType': 'record type',
            'EnumType': 'enum type',
            'ElaboratedType': 'elaborated type',
            'AttributedType': 'attributed type',
            'TemplateTypeParmType': 'template type parameter type',
            'SubstTemplateTypeParmType': 'substituted template type parameter type',
            'SubstTemplateTypeParmPackType': 'substituted template type parameter pack type',
            'TemplateSpecializationType': 'template specialization type',
            'AutoType': 'auto type',
            'DeducedTemplateSpecializationType': 'deduced template specialization type',
            'InjectedClassNameType': 'injected class name type',
            'DependentNameType': 'dependent name type',
            'DependentTemplateSpecializationType': 'dependent template specialization type',
            'PackExpansionType': 'pack expansion type',
            'ObjCObjectType': 'Objective-C object type',
            'ObjCInterfaceType': 'Objective-C interface type',
            'ObjCObjectPointerType': 'Objective-C object pointer type',
            'PipeType': 'pipe type',
            'AtomicType': 'atomic type',
            
            # Attributes
            'AlignedAttr': 'aligned attribute',
            'PackedAttr': 'packed attribute',
            'NoReturnAttr': 'noreturn attribute',
            'ConstAttr': 'const attribute',
            'PureAttr': 'pure attribute',
            'DeprecatedAttr': 'deprecated attribute',
            'UnavailableAttr': 'unavailable attribute',
            'VisibilityAttr': 'visibility attribute',
            'TypeVisibilityAttr': 'type visibility attribute',
            'DLLExportAttr': 'dllexport attribute',
            'DLLImportAttr': 'dllimport attribute',
            'AlwaysInlineAttr': 'always_inline attribute',
            'NoInlineAttr': 'noinline attribute',
            'FormatAttr': 'format attribute',
            'SectionAttr': 'section attribute',
            'UsedAttr': 'used attribute',
            'UnusedAttr': 'unused attribute',
            'WeakAttr': 'weak attribute',
            'AliasAttr': 'alias attribute',
            'ColdAttr': 'cold attribute',
            'HotAttr': 'hot attribute',
            'NoThrowAttr': 'nothrow attribute',
            'ReturnsTwiceAttr': 'returns_twice attribute',
            'MallocAttr': 'malloc attribute',
            'NoAliasAttr': 'noalias attribute',
            'AllocSizeAttr': 'alloc_size attribute',
            'WarnUnusedResultAttr': 'warn_unused_result attribute',
            'NonNullAttr': 'nonnull attribute',
            'ReturnsNonNullAttr': 'returns_nonnull attribute',
            'AssumeAlignedAttr': 'assume_aligned attribute',
            'AllocAlignAttr': 'alloc_align attribute',
            'EnableIfAttr': 'enable_if attribute',
            'PassObjectSizeAttr': 'pass_object_size attribute',
            'OverridableAttr': 'overridable attribute',
            'ConsumedAttr': 'consumed attribute',
            'CallableWhenAttr': 'callable_when attribute',
            'ParamTypestateAttr': 'param_typestate attribute',
            'ReturnTypestateAttr': 'return_typestate attribute',
            'SetTypestateAttr': 'set_typestate attribute',
            'TestTypestateAttr': 'test_typestate attribute',
            'AcquiredAfterAttr': 'acquired_after attribute',
            'AcquiredBeforeAttr': 'acquired_before attribute',
            'AssertCapabilityAttr': 'assert_capability attribute',
            'AssertSharedLockAttr': 'assert_shared_lock attribute',
            'AssertExclusiveLockAttr': 'assert_exclusive_lock attribute',
            'CapabilityAttr': 'capability attribute',
            'ExclusiveTrylockFunctionAttr': 'exclusive_trylock_function attribute',
            'SharedTrylockFunctionAttr': 'shared_trylock_function attribute',
            'LockReturnedAttr': 'lock_returned attribute',
            'LocksExcludedAttr': 'locks_excluded attribute',
            'ExclusiveLocksRequiredAttr': 'exclusive_locks_required attribute',
            'SharedLocksRequiredAttr': 'shared_locks_required attribute',
            'NoThreadSafetyAnalysisAttr': 'no_thread_safety_analysis attribute',
            'GuardedByAttr': 'guarded_by attribute',
            'PtGuardedByAttr': 'pt_guarded_by attribute',
            'AcquireCapabilityAttr': 'acquire_capability attribute',
            'TryAcquireCapabilityAttr': 'try_acquire_capability attribute',
            'ReleaseCapabilityAttr': 'release_capability attribute',
            'RequiresCapabilityAttr': 'requires_capability attribute',
            'ScopedLockableAttr': 'scoped_lockable attribute',
            'ExternalSourceSymbolAttr': 'external_source_symbol attribute',
            'InternalLinkageAttr': 'internal_linkage attribute',
            'MinSizeAttr': 'minsize attribute',
            'OptimizeNoneAttr': 'optnone attribute',
            'TargetAttr': 'target attribute',
            'CPUSpecificAttr': 'cpu_specific attribute',
            'CPUDispatchAttr': 'cpu_dispatch attribute',
            'CXX11NoReturnAttr': 'C++11 noreturn attribute',
            'CarriesDependencyAttr': 'carries_dependency attribute',
            'FallThroughAttr': 'fallthrough attribute',
            'MaybeUnusedAttr': 'maybe_unused attribute',
            'NoDiscardAttr': 'nodiscard attribute',
            'LifetimeBoundAttr': 'lifetime_bound attribute',
            'NoDestroyAttr': 'no_destroy attribute',
            'NoUniqueAddressAttr': 'no_unique_address attribute',
            'AssumeAttr': 'assume attribute',
            'ObjCExceptionAttr': 'objc_exception attribute',
            'ObjCNSObjectAttr': 'objc_nsobject attribute',
            'ObjCIndependentClassAttr': 'objc_independent_class attribute',
            'ObjCPreciseLifetimeAttr': 'objc_precise_lifetime attribute',
            'ObjCReturnsInnerPointerAttr': 'objc_returns_inner_pointer attribute',
            'ObjCRequiresSuperAttr': 'objc_requires_super attribute',
            'ObjCBridgeAttr': 'objc_bridge attribute',
            'ObjCBridgeMutableAttr': 'objc_bridge_mutable attribute',
            'ObjCBridgeRelatedAttr': 'objc_bridge_related attribute',
            'ObjCDesignatedInitializerAttr': 'objc_designated_initializer attribute',
            'ObjCRuntimeNameAttr': 'objc_runtime_name attribute',
            'ObjCBoxableAttr': 'objc_boxable attribute',
            'FlagEnumAttr': 'flag_enum attribute',
            'EnumExtensibilityAttr': 'enum_extensibility attribute',
            'WebAssemblyImportModuleAttr': 'wasm_import_module attribute',
            'WebAssemblyImportNameAttr': 'wasm_import_name attribute',
            'WebAssemblyExportNameAttr': 'wasm_export_name attribute',
            'CFAuditedTransferAttr': 'cf_audited_transfer attribute',
            'CFUnknownTransferAttr': 'cf_unknown_transfer attribute',
            'CFConsumedAttr': 'cf_consumed attribute',
            'CFReturnsRetainedAttr': 'cf_returns_retained attribute',
            'CFReturnsNotRetainedAttr': 'cf_returns_not_retained attribute',
            'NSConsumedAttr': 'ns_consumed attribute',
            'NSReturnsRetainedAttr': 'ns_returns_retained attribute',
            'NSReturnsNotRetainedAttr': 'ns_returns_not_retained attribute',
            'NSReturnsAutoreleasedAttr': 'ns_returns_autoreleased attribute',
            'NSConsumesSelfAttr': 'ns_consumes_self attribute',
            'NSErrorDomainAttr': 'ns_error_domain attribute',
            'ReturnsNonNullAttr': 'returns_nonnull attribute',
            'SwiftAttr': 'swift attribute',
            'SwiftAsyncAttr': 'swift_async attribute',
            'SwiftAsyncErrorAttr': 'swift_async_error attribute',
            'SwiftAsyncNameAttr': 'swift_async_name attribute',
            'SwiftBridgeAttr': 'swift_bridge attribute',
            'SwiftBridgedTypedefAttr': 'swift_bridged_typedef attribute',
            'SwiftErrorAttr': 'swift_error attribute',
            'SwiftNameAttr': 'swift_name attribute',
            'SwiftNewTypeAttr': 'swift_newtype attribute',
            'SwiftPrivateAttr': 'swift_private attribute',
            'SwiftVersionedAdditionAttr': 'swift_versioned_addition attribute',
            'SwiftVersionedRemovalAttr': 'swift_versioned_removal attribute',
            'AnyX86InterruptAttr': 'x86 interrupt attribute',
            'AnyX86NoCallerSavedRegistersAttr': 'x86 no_caller_saved_registers attribute',
            'AnyX86NoCfCheckAttr': 'x86 nocf_check attribute',
            'X86ForceAlignArgPointerAttr': 'x86 force_align_arg_pointer attribute',
            'PassObjectSizeAttr': 'pass_object_size attribute',
            'CountedByAttr': 'counted_by attribute',
            'TypeTagForDatatypeAttr': 'type_tag_for_datatype attribute',
            'ArgumentWithTypeTagAttr': 'argument_with_type_tag attribute',
            'TypeTagForDatatypeAttr': 'type_tag_for_datatype attribute',
            'ReleaseHandleAttr': 'release_handle attribute',
            'UseHandleAttr': 'use_handle attribute',
            'AcquireHandleAttr': 'acquire_handle attribute',
            'UnsafeBufferUsageAttr': 'unsafe_buffer_usage attribute',
            'PreferredNameAttr': 'preferred_name attribute',
            'StrictFPAttr': 'strict_fp attribute',
            'StrictGuardStackCheckAttr': 'strict_guard_stack_check attribute',
            'NoStackProtectorAttr': 'no_stack_protector attribute',
            'NotTailCalledAttr': 'not_tail_called attribute',
            'DisableTailCallsAttr': 'disable_tail_calls attribute',
            'SuppressAttr': 'suppress attribute',
            'CodeSegAttr': 'code_seg attribute',
            'MicrosoftABIAttr': 'ms_abi attribute',
            'SysVABIAttr': 'sysv_abi attribute',
            'RegCallAttr': 'regcall attribute',
            'PreserveMostAttr': 'preserve_most attribute',
            'PreserveAllAttr': 'preserve_all attribute',
            'SwiftCallAttr': 'swiftcall attribute',
            'VectorCallAttr': 'vectorcall attribute',
            'PcsAttr': 'pcs attribute',
            'IntelOclBiccAttr': 'intel_ocl_bicc attribute',
            'MSP430InterruptAttr': 'msp430_interrupt attribute',
            'MipsInterruptAttr': 'mips_interrupt attribute',
            'MipsLongCallAttr': 'mips_long_call attribute',
            'MipsShortCallAttr': 'mips_short_call attribute',
            'Mips16Attr': 'mips16 attribute',
            'MicroMipsAttr': 'micromips attribute',
            'NoMips16Attr': 'nomips16 attribute',
            'NoMicroMipsAttr': 'nomicromips attribute',
            'AVRInterruptAttr': 'avr_interrupt attribute',
            'AVRSignalAttr': 'avr_signal attribute',
            'WebAssemblyImportModuleAttr': 'wasm_import_module attribute',
            'WebAssemblyImportNameAttr': 'wasm_import_name attribute',
            'WebAssemblyExportNameAttr': 'wasm_export_name attribute',
            'RISCVInterruptAttr': 'riscv_interrupt attribute',
            'AMDGPUKernelCallAttr': 'amdgpu_kernel_call attribute',
            'AMDGPUNumSGPRAttr': 'amdgpu_num_sgpr attribute',
            'AMDGPUNumVGPRAttr': 'amdgpu_num_vgpr attribute',
            'AMDGPUWavesPerEUAttr': 'amdgpu_waves_per_eu attribute',
            'AMDGPUFlatWorkGroupSizeAttr': 'amdgpu_flat_work_group_size attribute',
            'CUDADeviceAttr': 'cuda_device attribute',
            'CUDAGlobalAttr': 'cuda_global attribute',
            'CUDAHostAttr': 'cuda_host attribute',
            'CUDAConstantAttr': 'cuda_constant attribute',
            'CUDASharedAttr': 'cuda_shared attribute',
            'CUDALaunchBoundsAttr': 'cuda_launch_bounds attribute',
            'CUDADeviceBuiltinSurfaceTypeAttr': 'cuda_device_builtin_surface_type attribute',
            'CUDADeviceBuiltinTextureTypeAttr': 'cuda_device_builtin_texture_type attribute',
            'OpenCLKernelAttr': 'opencl_kernel attribute',
            'OpenCLAccessAttr': 'opencl_access attribute',
            'OpenCLPrivateAddressSpaceAttr': 'opencl_private_address_space attribute',
            'OpenCLGlobalAddressSpaceAttr': 'opencl_global_address_space attribute',
            'OpenCLConstantAddressSpaceAttr': 'opencl_constant_address_space attribute',
            'OpenCLLocalAddressSpaceAttr': 'opencl_local_address_space attribute',
            'OpenCLGenericAddressSpaceAttr': 'opencl_generic_address_space attribute',
            'OpenCLIntelReqdSubGroupSizeAttr': 'opencl_intel_reqd_sub_group_size attribute',
            'OpenCLUnrollHintAttr': 'opencl_unroll_hint attribute',
            'RenderScriptKernelAttr': 'renderscript_kernel attribute',
            'HLSLNumThreadsAttr': 'hlsl_numthreads attribute',
            'HLSLShaderAttr': 'hlsl_shader attribute',
            'HLSLResourceBindingAttr': 'hlsl_resource_binding attribute',
            'HLSLPackOffsetAttr': 'hlsl_packoffset attribute',
            'HLSLResourceClassAttr': 'hlsl_resource_class attribute',
            'HLSLROVAttr': 'hlsl_rov attribute',
            'HLSLGroupSharedAddressSpaceAttr': 'hlsl_groupshared_address_space attribute',
            'SYCLKernelAttr': 'sycl_kernel attribute',
            'SYCLSpecialClassAttr': 'sycl_special_class attribute',
            'C11NoReturnAttr': 'C11 noreturn attribute',
            'CXX11NoReturnAttr': 'C++11 noreturn attribute',
            'CarriesDependencyAttr': 'carries_dependency attribute',
            'FallThroughAttr': 'fallthrough attribute',
            'MaybeUnusedAttr': 'maybe_unused attribute',
            'NoDiscardAttr': 'nodiscard attribute',
            'LifetimeBoundAttr': 'lifetime_bound attribute',
            'NoDestroyAttr': 'no_destroy attribute',
            'NoUniqueAddressAttr': 'no_unique_address attribute',
            'LikelyAttr': 'likely attribute',
            'UnlikelyAttr': 'unlikely attribute',
            'AssumeAttr': 'assume attribute',
            'InitSegAttr': 'init_seg attribute',
            'LoopHintAttr': 'loop hint attribute',
            'ModeAttr': 'mode attribute',
            'NoDebugAttr': 'no_debug attribute',
            'NoInstrumentFunctionAttr': 'no_instrument_function attribute',
            'NoProfileFunctionAttr': 'no_profile_function attribute',
            'NoSanitizeAttr': 'no_sanitize attribute',
            'NoSplitStackAttr': 'no_split_stack attribute',
            'ObjCBoxableAttr': 'objc_boxable attribute',
            'ObjCClassStubAttr': 'objc_class_stub attribute',
            'ObjCDirectAttr': 'objc_direct attribute',
            'ObjCDirectMembersAttr': 'objc_direct_members attribute',
            'ObjCNonLazyClassAttr': 'objc_nonlazy_class attribute',
            'ObjCNonRuntimeProtocolAttr': 'objc_non_runtime_protocol attribute',
            'ObjCRuntimeVisibleAttr': 'objc_runtime_visible attribute',
            'ObjCSubclassingRestrictedAttr': 'objc_subclassing_restricted attribute',
            'OMPAllocateDeclAttr': 'omp allocate attribute',
            'OMPCaptureNoInitAttr': 'omp capture no_init attribute',
            'OMPDeclareSimdDeclAttr': 'omp declare simd attribute',
            'OMPDeclareTargetDeclAttr': 'omp declare target attribute',
            'OMPDeclareVariantAttr': 'omp declare variant attribute',
            'OMPThreadPrivateDeclAttr': 'omp threadprivate attribute',
            'PragmaClangBSSSectionAttr': 'pragma clang bss_section attribute',
            'PragmaClangDataSectionAttr': 'pragma clang data_section attribute',
            'PragmaClangRodataSectionAttr': 'pragma clang rodata_section attribute',
            'PragmaClangRelroSectionAttr': 'pragma clang relro_section attribute',
            'PragmaClangTextSectionAttr': 'pragma clang text_section attribute',
            'PureAttr': 'pure attribute',
            'ReqdWorkGroupSizeAttr': 'reqd_work_group_size attribute',
            'RestrictAttr': 'restrict attribute',
            'RetainAttr': 'retain attribute',
            'SelectAnyAttr': 'selectany attribute',
            'SpeculativeLoadHardeningAttr': 'speculative_load_hardening attribute',
            'TLSModelAttr': 'tls_model attribute',
            'ThreadAttr': 'thread attribute',
            'UuidAttr': 'uuid attribute',
            'WorkGroupSizeHintAttr': 'work_group_size_hint attribute',
            'XRayInstrumentAttr': 'xray_instrument attribute',
            'XRayLogArgsAttr': 'xray_log_args attribute',
        }
    
    def get_explanation(self, node_kind):
        """Get human-readable explanation for AST node kind."""
        return self.explanations.get(node_kind, f"AST node of type {node_kind}")
    
    def get_all_explanations(self):
        """Get all explanations as a dictionary."""
        return self.explanations.copy()
    
    def add_explanation(self, node_kind, explanation):
        """Add or update an explanation for a node kind."""
        self.explanations[node_kind] = explanation
    
    def get_categories(self):
        """Get explanations grouped by categories."""
        categories = {
            'Declarations': [],
            'Statements': [],
            'Expressions': [],
            'Types': [],
            'Attributes': [],
            'Other': []
        }
        
        for node_kind, explanation in self.explanations.items():
            if 'Decl' in node_kind:
                categories['Declarations'].append((node_kind, explanation))
            elif 'Stmt' in node_kind:
                categories['Statements'].append((node_kind, explanation))
            elif 'Expr' in node_kind or 'Literal' in node_kind:
                categories['Expressions'].append((node_kind, explanation))
            elif 'Type' in node_kind:
                categories['Types'].append((node_kind, explanation))
            elif 'Attr' in node_kind:
                categories['Attributes'].append((node_kind, explanation))
            else:
                categories['Other'].append((node_kind, explanation))
        
        return categories
